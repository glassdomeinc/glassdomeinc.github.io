"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4409],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=s(n),m=o,d=g["".concat(u,".").concat(m)]||g[m]||c[m]||a;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[g]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(4137));const a={slug:"goqu-tutorial",title:"Start using Goqu to build your SQL Queries in Go",authors:"adil",tags:["goqu","SQL","SQL Query","Query Builder","String builder","Go","SQL Injection","Safe"]},i=void 0,l={permalink:"/en/blog/goqu-tutorial",source:"@site/blog/2022-11-14-goqu-tutorial.md",title:"Start using Goqu to build your SQL Queries in Go",description:"Why Goqu?",date:"2022-11-14T00:00:00.000Z",formattedDate:"November 14, 2022",tags:[{label:"goqu",permalink:"/en/blog/tags/goqu"},{label:"SQL",permalink:"/en/blog/tags/sql"},{label:"SQL Query",permalink:"/en/blog/tags/sql-query"},{label:"Query Builder",permalink:"/en/blog/tags/query-builder"},{label:"String builder",permalink:"/en/blog/tags/string-builder"},{label:"Go",permalink:"/en/blog/tags/go"},{label:"SQL Injection",permalink:"/en/blog/tags/sql-injection"},{label:"Safe",permalink:"/en/blog/tags/safe"}],readingTime:1.775,hasTruncateMarker:!0,authors:[{name:"Adil",title:"Software Engineer",url:"https://github.com/adilb99",imageURL:"https://avatars.githubusercontent.com/u/47117931?v=4",key:"adil"}],frontMatter:{slug:"goqu-tutorial",title:"Start using Goqu to build your SQL Queries in Go",authors:"adil",tags:["goqu","SQL","SQL Query","Query Builder","String builder","Go","SQL Injection","Safe"]},prevItem:{title:"Creating an API Gateway for your backend with KrakenD",permalink:"/en/blog/krakend"},nextItem:{title:"An example of mapping with lo library in Go",permalink:"/en/blog/lo-example"}},u={authorsImageUrls:[void 0]},s=[{value:"Why Goqu?",id:"why-goqu",level:2},{value:"Example Query",id:"example-query",level:2},{value:"Conclusion",id:"conclusion",level:2}],p={toc:s};function g(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"why-goqu"},"Why Goqu?"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/doug-martin/goqu"},"doug-martin/goqu")),(0,o.kt)("p",null,"Building SQL queries can be as simple as writing strings. Unfortunately, there are no f-strings in Go and using String builder can be a hassle. Not only that, using plain strings without extensive validation can make your application prone to SQL Injections in many cases. "),(0,o.kt)("p",null,"Currently, it is convenient to use goqu, an SQL query builder for Go to make it both convenient and safe. It validates the syntax and safety of your queries while also being a more convenient code-like way to build queries. Some of the validation also happens at compile time thanks to the DSL."),(0,o.kt)("h2",{id:"example-query"},"Example Query"),(0,o.kt)("p",null,"Let's look at the following example query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SELECT * FROM \"TableName\" WHERE (id = '123123' AND (\"ts\" BETWEEN parseDateTime64BestEffort('2022-09-15T00:00:03Z', 0) AND parseDateTime64BestEffort('2022-09-15T00:01:41Z', 0))) ORDER BY \"ts\" ASC\n")),(0,o.kt)("p",null,"To build this with Go String Builder we would have to have a long tedious list of additions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'builder := strings.Builder()\n\nbuilder.WriteString("SELECT * FROM ")\nbuilder.WriteString(TableName)\nbuilder.WriteString(" WHERE ")\n ...\n')),(0,o.kt)("p",null,"With Goqu, building the same query looks something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sql, _, _ := goqu.Select().\n  From(\n    goqu.T(TableName),\n  ).\n  Where(\n    goqu.And(\n      goqu.L("id = ?", Id),\n      goqu.C("ts").Between(\n        goqu.Range(\n          goqu.L("parseDateTime64BestEffort(?, 0)", From),\n          goqu.L("parseDateTime64BestEffort(?, 0)", To),\n        ),\n      ),\n    ),\n  ).\n  Order(goqu.I("ts").Asc()).\n  ToSQL()\n\nreturn sql\n')),(0,o.kt)("p",null,"In this case, the method ",(0,o.kt)("inlineCode",{parentName:"p"},".T")," allows you to specify a table name without worrying about wrapping it in proper trailing spaces and quotation marks."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},".C")," does the same with columns and ",(0,o.kt)("inlineCode",{parentName:"p"},".L")," can create whole expressions in which you can substitute dynamic parameters by specifying a ",(0,o.kt)("inlineCode",{parentName:"p"},"?")," in the expression string"),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"It takes almost no time to get used to building queries with goqu, although to write larger SQL statements sometimes we can produce goqu code that isn't easily readable and can span too many lines to understand all at once. However, there are formatting conventions that somewhat alleviate that problem. "),(0,o.kt)("p",null,"In the example above, we can see how utilizing only one goqu call per line + indentation can greatly improve readability. For more info on how to improve your goqu SQL building, refer to their ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/doug-martin/goqu#docs"},"Docs section on GitHub"),"."),(0,o.kt)("p",null,"Happy coding! ~"))}g.isMDXComponent=!0}}]);