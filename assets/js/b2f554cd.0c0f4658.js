"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1477],{10:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"persistent-storage-increase","metadata":{"permalink":"/blog/persistent-storage-increase","source":"@site/blog/2022-12-1-persistent-volume-increase.md","title":"How to increase persistent storage capacity for a stateful set on K8s with no downtime","description":"Why do we need this?","date":"2022-12-01T00:00:00.000Z","formattedDate":"2022\ub144 12\uc6d4 1\uc77c","tags":[{"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"label":"statefulset","permalink":"/blog/tags/statefulset"},{"label":"storage","permalink":"/blog/tags/storage"},{"label":"persistent","permalink":"/blog/tags/persistent"},{"label":"volume","permalink":"/blog/tags/volume"},{"label":"capacity","permalink":"/blog/tags/capacity"},{"label":"increase","permalink":"/blog/tags/increase"},{"label":"downtime","permalink":"/blog/tags/downtime"}],"readingTime":1.795,"hasTruncateMarker":true,"authors":[{"name":"Adil","title":"Software Engineer","url":"https://github.com/adilb99","imageURL":"https://avatars.githubusercontent.com/u/47117931?v=4","key":"adil"}],"frontMatter":{"slug":"persistent-storage-increase","title":"How to increase persistent storage capacity for a stateful set on K8s with no downtime","authors":"adil","tags":["kubernetes","statefulset","storage","persistent","volume","capacity","increase","downtime"]},"nextItem":{"title":"Creating an API Gateway for your backend with KrakenD","permalink":"/blog/krakend"}},"content":"## Why do we need this?\\n\\nCertain applications that run on Kubernetes are deployed via deployments and some via stateful sets. Database systems like Clickhouse are usually deployed via stateful sets. \\n\\nHowever, storage disks for such databases can easily run out of space and become full and if we try to increase the capacity in-place for the running stateful set, we can run into an error:\\n```\\nStatefulSet.apps <appName> is invalid: spec: Forbidden: updates to statefulset > spec for fields other than \'replicas\', \'template\', and \'updateStrategy\' are forbidden.\\n```\\n\\nThe first solution to this that comes to mind is to simply re-create the stateful set. For that, however, we need to stop and remove the stateful set and all its pods, transfer the data from the volume to a backup storage, re-create everything and move the data. This can create a good amount of downtime many applications cannot afford.\\n\\nFortunately, there is an easy workaround that allows no downtime.\\n\\n\x3c!--truncate--\x3e\\n\\n<br/>\\n\\n## How to do it\\n\\nFor each persistent volume claim (PVC) in the stateful set, edit both the current capacity and the requested capacity either via:\\n\\n```\\n$ kubectl edit pvc <name> --namespace <namespace>\\n```\\n\\nor by using k9s and pressing E on the PVC entity.\\n\\n<br/>\\n\\nThen, delete the stateful set like such:\\n\\n```\\n$ kubectl delete sts --cascade=orphan <name> --namespace <namespace>\\n```\\n\\nIn this case, by specifying the flag \'orphan\', we will leave all pods and services running as orphans without the stateful set, thus no downtime.\\n\\n<br/>\\n\\nThen, don\'t forget to change the configuration for the stateful set, either in your helm chart value file, or in your yaml config. \\n\\nRe-create the stateful set either as such:\\n\\n```\\n$ kubectl apply -f <name>\\n```\\n\\nOr if you use helm, by re-installing the helm chart via:\\n\\n```\\n$ helm upgrade --install\\n```\\n\\n<br/>\\n\\nAfter that, the stateful set should be back and you need to update the pods by restarting them with:\\n\\n```\\n$ kubectl rollout restart sts <name> --namespace <namespace>\\n```\\n\\nDuring restart, the pod\'s PVC will be resized. Problem solved!\\n\\n**Happy coding!~**\\n\\n## References\\n\\n- [How to increase disk size in a stateful set](https://itecnotes.com/server/how-to-increase-disk-size-in-a-stateful-set/)"},{"id":"krakend","metadata":{"permalink":"/blog/krakend","source":"@site/blog/2022-11-17-krakend-api-gateway.md","title":"Creating an API Gateway for your backend with KrakenD","description":"What\'s KrakenD?","date":"2022-11-17T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 17\uc77c","tags":[{"label":"krakend","permalink":"/blog/tags/krakend"},{"label":"backend","permalink":"/blog/tags/backend"},{"label":"api","permalink":"/blog/tags/api"},{"label":"gateway","permalink":"/blog/tags/gateway"},{"label":"scaling","permalink":"/blog/tags/scaling"},{"label":"abstraction","permalink":"/blog/tags/abstraction"},{"label":"stateless","permalink":"/blog/tags/stateless"},{"label":"performance","permalink":"/blog/tags/performance"}],"readingTime":2.485,"hasTruncateMarker":true,"authors":[{"name":"Adil","title":"Software Engineer","url":"https://github.com/adilb99","imageURL":"https://avatars.githubusercontent.com/u/47117931?v=4","key":"adil"}],"frontMatter":{"slug":"krakend","title":"Creating an API Gateway for your backend with KrakenD","authors":"adil","tags":["krakend","backend","api","gateway","scaling","abstraction","stateless","performance"]},"prevItem":{"title":"How to increase persistent storage capacity for a stateful set on K8s with no downtime","permalink":"/blog/persistent-storage-increase"},"nextItem":{"title":"Start using Goqu to build your SQL Queries in Go","permalink":"/blog/goqu-tutorial"}},"content":"## What\'s KrakenD?\\n\\n[krakend](https://www.krakend.io/) is a powerful API Gateway that allows abstracting many features away from your backend and into a separate highly-scalable and high performance module. Apart from being a proxy to one or many of your backends, it supports security, monitoring, scaling, throttling, caching and other useful features that might be needed for APIs. \\n\\n\x3c!--truncate--\x3e\\n\\n## Why do we need an API Gateway?\\n\\nAn API Gateway basically implements a single interface in front of a complex system to improve its usability and provide loose coupling. It allows us to change the location of the backend components and their internals with no impact to the client.\\n\\n## Why exactly KrakenD?\\n\\nIt\'s fairly easy to set up and is said to have very good performance as well as the ability to use all kinds of middleware, either in between gateway and backend, or in between gateway and client.\\n\\n## How to set it up\\n\\nThe only prerequisite for KrakenD is to install it. On MacOS, you can do\\n```\\n$ brew install krakend\\n```\\n\\nThe root directory of the KrakenD can be set up with the following structure:\\n```\\n\u251c\u2500\u2500 README.md\\n\u251c\u2500\u2500 krakend.json\\n\u251c\u2500\u2500 out.json\\n\u251c\u2500\u2500 package.json\\n\u251c\u2500\u2500 partials\\n\u2502   \u2514\u2500\u2500 rate_limit_backend.tmpl\\n\u251c\u2500\u2500 scripts\\n\u2502   \u251c\u2500\u2500 check.sh\\n\u2502   \u2514\u2500\u2500 run.sh\\n\u251c\u2500\u2500 settings\\n\u2502   \u251c\u2500\u2500 jwt.json\\n\u2502   \u2514\u2500\u2500 service.json\\n\u2514\u2500\u2500 templates\\n    \u251c\u2500\u2500 endpoint-example1.tmpl\\n    \u251c\u2500\u2500 endpoint-example2.tmpl\\n    \u251c\u2500\u2500 endpoint-example3.tmpl\\n    \u2514\u2500\u2500 endpoint.tmpl\\n```\\n(although it can be set up any other way)\\n\\n\\n`settings` folder basically contains JSON files that have sensitive env variables we inject into our .tmpl templates.\\n\\n`partials` contain middleware or other configuration related to, for example, scalability and rate limiting. For example:\\n```rate_limit_backend.tmpl title=\\"rate_limit_backend.tmpl\\"\\n\\"qos/ratelimit/proxy\\": {\\n    \\"max_rate\\": \\"100\\",\\n    \\"capacity\\": \\"100\\"\\n}\\n```\\n\\n`templates` contains the template files from which the generation of a final config, out.json will begin\\n\\n`scripts` simply contain shell scripts for simplification\\n\\n\\n## Building templates\\n\\nWe can summarize all endpoints in a single file as such:\\n```endpoint.tmpl title=\\"endpoint.tmpl\\"\\n{{ define \\"Endpoint\\" }}\\n{{ template \\"EndpointExample1\\" . }},\\n{{ template \\"EndpointExample2\\" . }},\\n{{ template \\"EndpointExample3\\" . }},\\n{{ end }}\\n```\\n\\nThe contents of each endpoint then can be boiled down to:\\n```endpoint-example1.tmpl title=\\"endpoint-example1.tmpl\\"\\n{{ define \\"EndpointExample1\\" }}\\n{\\n  \\"@comment\\": \\"Endpoint Example 1\\",\\n  \\"endpoint\\": \\"/example/{example_id}\\",\\n  \\"method\\": \\"GET\\",\\n  \\"input_query_strings\\": [\\"timestamp\\"],\\n  \\"backend\\": [\\n    {\\n      \\"method\\": \\"GET\\",\\n      \\"host\\": [\\"{{ .service.example1 }}\\"],\\n      \\"url_pattern\\": \\"/example/{example_id}\\"\\n    }\\n  ],\\n  \\"extra_config\\": {\\n      \\"auth/validator\\": {\\n      \\"alg\\": \\"RS256\\",\\n      \\"cache\\": true,\\n      \\"jwk_url\\": \\"{{ .jwt.jwk_url }}\\",\\n      \\"issuer\\": \\"{{ .jwt.issuer }}\\"\\n    }\\n  }\\n}\\n{{ end }}\\n```\\n\\nHere `.service.example1` is an injection of the endpoint credential from `/settings/service.json`\\n\\n`extra_config` is optional and here it enables JWT Authorization using an external token issuer (e.g. AWS Cognito)\\n\\n\\nSettings can look like:\\n```service.json title=\\"service.json\\"\\n{\\n  \\"example1\\": \\"http://localhost:8080\\"\\n}\\n\\n```\\n\\n## Conclusion\\n\\nAs you can see, it is very quick and easy to set up the bare bones of KrakenD. However, it can get tricky to set up the actual live deployment using one, depending on your requirements. For that, I will follow up with a separate tutorial.\\n\\nHappy coding! ~"},{"id":"goqu-tutorial","metadata":{"permalink":"/blog/goqu-tutorial","source":"@site/blog/2022-11-14-goqu-tutorial.md","title":"Start using Goqu to build your SQL Queries in Go","description":"Why Goqu?","date":"2022-11-14T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 14\uc77c","tags":[{"label":"goqu","permalink":"/blog/tags/goqu"},{"label":"SQL","permalink":"/blog/tags/sql"},{"label":"SQL Query","permalink":"/blog/tags/sql-query"},{"label":"Query Builder","permalink":"/blog/tags/query-builder"},{"label":"String builder","permalink":"/blog/tags/string-builder"},{"label":"Go","permalink":"/blog/tags/go"},{"label":"SQL Injection","permalink":"/blog/tags/sql-injection"},{"label":"Safe","permalink":"/blog/tags/safe"}],"readingTime":1.775,"hasTruncateMarker":true,"authors":[{"name":"Adil","title":"Software Engineer","url":"https://github.com/adilb99","imageURL":"https://avatars.githubusercontent.com/u/47117931?v=4","key":"adil"}],"frontMatter":{"slug":"goqu-tutorial","title":"Start using Goqu to build your SQL Queries in Go","authors":"adil","tags":["goqu","SQL","SQL Query","Query Builder","String builder","Go","SQL Injection","Safe"]},"prevItem":{"title":"Creating an API Gateway for your backend with KrakenD","permalink":"/blog/krakend"},"nextItem":{"title":"An example of mapping with lo library in Go","permalink":"/blog/lo-example"}},"content":"## Why Goqu?\\n\\n[doug-martin/goqu](https://github.com/doug-martin/goqu)\\n\\nBuilding SQL queries can be as simple as writing strings. Unfortunately, there are no f-strings in Go and using String builder can be a hassle. Not only that, using plain strings without extensive validation can make your application prone to SQL Injections in many cases. \\n\\nCurrently, it is convenient to use goqu, an SQL query builder for Go to make it both convenient and safe. It validates the syntax and safety of your queries while also being a more convenient code-like way to build queries. Some of the validation also happens at compile time thanks to the DSL.\\n\\n\x3c!--truncate--\x3e\\n\\n## Example Query\\n\\nLet\'s look at the following example query:\\n```\\nSELECT * FROM \\"TableName\\" WHERE (id = \'123123\' AND (\\"ts\\" BETWEEN parseDateTime64BestEffort(\'2022-09-15T00:00:03Z\', 0) AND parseDateTime64BestEffort(\'2022-09-15T00:01:41Z\', 0))) ORDER BY \\"ts\\" ASC\\n```\\n\\nTo build this with Go String Builder we would have to have a long tedious list of additions:\\n```\\nbuilder := strings.Builder()\\n\\nbuilder.WriteString(\\"SELECT * FROM \\")\\nbuilder.WriteString(TableName)\\nbuilder.WriteString(\\" WHERE \\")\\n ...\\n```\\n\\nWith Goqu, building the same query looks something like this:\\n```\\nsql, _, _ := goqu.Select().\\n  From(\\n    goqu.T(TableName),\\n  ).\\n  Where(\\n    goqu.And(\\n      goqu.L(\\"id = ?\\", Id),\\n      goqu.C(\\"ts\\").Between(\\n        goqu.Range(\\n          goqu.L(\\"parseDateTime64BestEffort(?, 0)\\", From),\\n          goqu.L(\\"parseDateTime64BestEffort(?, 0)\\", To),\\n        ),\\n      ),\\n    ),\\n  ).\\n  Order(goqu.I(\\"ts\\").Asc()).\\n  ToSQL()\\n\\nreturn sql\\n```\\n\\nIn this case, the method `.T` allows you to specify a table name without worrying about wrapping it in proper trailing spaces and quotation marks.\\n\\n`.C` does the same with columns and `.L` can create whole expressions in which you can substitute dynamic parameters by specifying a `?` in the expression string\\n\\n## Conclusion\\n\\nIt takes almost no time to get used to building queries with goqu, although to write larger SQL statements sometimes we can produce goqu code that isn\'t easily readable and can span too many lines to understand all at once. However, there are formatting conventions that somewhat alleviate that problem. \\n\\nIn the example above, we can see how utilizing only one goqu call per line + indentation can greatly improve readability. For more info on how to improve your goqu SQL building, refer to their [Docs section on GitHub](https://github.com/doug-martin/goqu#docs).\\n\\nHappy coding! ~"},{"id":"lo-example","metadata":{"permalink":"/blog/lo-example","source":"@site/blog/2022-11-14-mapping-with-lo.md","title":"An example of mapping with lo library in Go","description":"What\'s lo and why?","date":"2022-11-14T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 14\uc77c","tags":[{"label":"lo","permalink":"/blog/tags/lo"},{"label":"lodash","permalink":"/blog/tags/lodash"},{"label":"postgres","permalink":"/blog/tags/postgres"},{"label":"query","permalink":"/blog/tags/query"},{"label":"formatting","permalink":"/blog/tags/formatting"},{"label":"mapping","permalink":"/blog/tags/mapping"},{"label":"go","permalink":"/blog/tags/go"}],"readingTime":1.695,"hasTruncateMarker":true,"authors":[{"name":"Adil","title":"Software Engineer","url":"https://github.com/adilb99","imageURL":"https://avatars.githubusercontent.com/u/47117931?v=4","key":"adil"}],"frontMatter":{"slug":"lo-example","title":"An example of mapping with lo library in Go","authors":"adil","tags":["lo","lodash","postgres","query","formatting","mapping","go"]},"prevItem":{"title":"Start using Goqu to build your SQL Queries in Go","permalink":"/blog/goqu-tutorial"},"nextItem":{"title":"Deploying an S3 static website with CDK for Terraform on Cloudfront vs Cloudflare","permalink":"/blog/cdktf-cloudfront-cloudflare"}},"content":"## What\'s lo and why?\\n\\n[samber/lo](https://github.com/samber/lo) is a Lodash-style library for Go that provides common methods for development such as Map, Filter, FlatMap, Reduce, Uniq and so on. (You can deduce what each method does by its name)\\n\\nSince the library functionality is so generic, it can be used in a variety of ways. In this particular example, I can show you that it can be helpful for processing DB data of unknown data type and putting it into type-safe structs.\\n\\n\x3c!--truncate--\x3e\\n\\n## Example mapping\\n\\nSo, let\'s say we\'re getting data from Postgres, but certain values can be of different data type. You can consume the response into a generic Record struct as such:\\n```\\ntype Record struct {\\n\\tTs       time.Time\\n\\tId       string\\n\\tValue    interface{}\\n}\\n\\nnumericExample := Record{\\n  Ts: time.Now(),\\n  Id: \\"abc\\",\\n  Value: 24.2\\n}\\n\\nstringExample := Record{\\n  Ts: time.Now(),\\n  Id: \\"def\\",\\n  Value: \\"SomeRandomValueeee\\"\\n}\\n```\\n**\\\\*Note: Let\'s also imagine the response is an array of such Records**\\n\\nHowever, the Value can be either Boolean, Numeric or String. And we need to put the data into a response array that is as such:\\n```\\ntype ResultItem struct {\\n\\tTs       time.Time\\n\\tId       string\\n\\tBooleanValue    bool\\n  StringValue     string\\n  NumericValue    float64\\n}\\n\\ntype ResultArray []ResultItem\\n```\\n\\n\\n\\nWe can then use lo to map into a desired response array as such:\\n```\\nitems := lo.Map(records, func(record Record, _ int) ResultItem {\\n  switch(record.Value.(type)) {\\n    case float64:\\n      return ResultItem{\\n        Ts:           record.Ts,\\n        NumericValue: record.Value,\\n      }\\n    case boolean:\\n      return Result{\\n        Ts:           record.Ts,\\n        BooleanValue: record.Value,\\n      }\\n    default:\\n      return ResultItem{\\n        Ts:           record.Ts,\\n        StringValue:  record.Value,\\n      }\\n  }\\n})\\n```\\n\\n\\nThat way we can quickly and conveniently map the DB response into a struct we need the output to be in.\\n\\n\\n## Other benefits of lo\\n\\nApart from mapping, this library offers abstractions for multitude of different generic operations, some of which may already be present in Go and some taken care of by \\"reflect\\" package. However, lo adds more generics and is generally shown to be faster based on performance benchmarks. So, there you have it.\\n\\nHappy coding! ~"},{"id":"cdktf-cloudfront-cloudflare","metadata":{"permalink":"/blog/cdktf-cloudfront-cloudflare","source":"@site/blog/2022-11-08-cdktf-cloudfront-cloudflare-eng.md","title":"Deploying an S3 static website with CDK for Terraform on Cloudfront vs Cloudflare","description":"This tutorial shows what I did to setup and deploy an example static website on Cloudflare and Amazon Cloudfront using Terraform (CDK, Typescript)","date":"2022-11-08T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 8\uc77c","tags":[{"label":"cdktf","permalink":"/blog/tags/cdktf"},{"label":"terraform","permalink":"/blog/tags/terraform"},{"label":"cloudfront","permalink":"/blog/tags/cloudfront"},{"label":"cloudflare","permalink":"/blog/tags/cloudflare"},{"label":"s3","permalink":"/blog/tags/s-3"},{"label":"static","permalink":"/blog/tags/static"},{"label":"website","permalink":"/blog/tags/website"}],"readingTime":6.7,"hasTruncateMarker":true,"authors":[{"name":"Adil","title":"Software Engineer","url":"https://github.com/adilb99","imageURL":"https://avatars.githubusercontent.com/u/47117931?v=4","key":"adil"}],"frontMatter":{"slug":"cdktf-cloudfront-cloudflare","title":"Deploying an S3 static website with CDK for Terraform on Cloudfront vs Cloudflare","authors":"adil","tags":["cdktf","terraform","cloudfront","cloudflare","s3","static","website"]},"prevItem":{"title":"An example of mapping with lo library in Go","permalink":"/blog/lo-example"},"nextItem":{"title":"Installing Clickhouse on Kubernetes Hosted by NCloud and NHN Cloud","permalink":"/blog/clickhouse"}},"content":"This tutorial shows what I did to setup and deploy an example static website on Cloudflare and Amazon Cloudfront using Terraform (CDK, Typescript)\\n\\nCloudflare and Cloudfront are similar CDN, DNS and load balancing providers that can help host your API or website and make it more available. Despite their similarity, setting them up with an S3 Hosted static website is obviously different.\\n\\nIn this tutorial, I\'ll give some code snippets and pointers on how to set up the bare working minimum for each. The rest like more secure S3 Policies, hosting directly on Cloudflare or using an on-premise hosted website instead of an S3 Bucket will be up to the reader.\\n\\n\x3c!--truncate--\x3e\\n\\n## Prerequisites\\n\\nMake sure to have cdktf, terraform, node, npm, react installed on your system.\\n\\n<br />\\n\\n## Initializing the project and folder structure\\n\\nFolder structure is as follows:\\n\\n```\\ncloudflare-example\\n\u251c\u2500\u2500 README.md\\n\u251c\u2500\u2500 index.ts\\n\u251c\u2500\u2500 lib\\n\u2502   \u251c\u2500\u2500 backend.ts\\n\u2502   \u251c\u2500\u2500 provider.ts\\n\u2502   \u251c\u2500\u2500 test\\n\u2502   \u2502   \u251c\u2500\u2500 cloudflare-test.ts\\n\u2502   \u2502   \u251c\u2500\u2500 cloudfront-test.ts\\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\\n\u2502   \u2514\u2500\u2500 web\\n\u2502       \u251c\u2500\u2500 README.md\\n\u2502       \u251c\u2500\u2500 build\\n\u2502       \u251c\u2500\u2500 node_modules\\n\u2502       \u251c\u2500\u2500 package-lock.json\\n\u2502       \u251c\u2500\u2500 package.json\\n\u2502       \u251c\u2500\u2500 public\\n\u2502       \u2514\u2500\u2500 src\\n\u251c\u2500\u2500 package-lock.json\\n\u251c\u2500\u2500 package.json\\n\u251c\u2500\u2500 jest.config.js\\n\u2514\u2500\u2500 tsconfig.json\\n```\\n\\n\'web\' folder can be initialized using:\\n\\n```\\n$ cd lib\\n$ npm i -g create-react-app\\n$ create-react-app web\\n$ cd web\\n$ npm run build\\n```\\n\\nThe root folder can be initialized with:\\n\\n```\\n$ cdktf init\\n```\\n\\nThe rest needs to be created.\\n\\n<br />\\n\\n## Boilerplate code to start with\\n\\nFirst, get provider dependencies by running:\\n\\n```\\n$ cdktf get\\n```\\n\\nThe dependencies will be store in the directory \'.gen\' under root folder of the project.\\n\\n### Let\'s now create our main -- index.ts in the root folder, from which the Terraform app can run:\\n\\n```ts title=\\"index.ts\\"\\nimport * as dotenv from \'dotenv\'\\nimport { App } from \'cdktf\'\\nimport { TestStack } from \'./lib/test\'\\n\\ndotenv.config()\\n\\nconst app = new App()\\n\\nnew TestStack(app, \'test\')\\n\\napp.synth()\\n```\\n\\n### And then the index.ts in \'lib\' where we define our Terraform Stack:\\n\\nFirst, the dependencies are as such:\\n\\n```ts title=\\"/lib/index.ts\\"\\nimport { TerraformStack } from \'cdktf\'\\nimport { Construct } from \'constructs\'\\nimport { MyBackend } from \'../backend\'\\nimport { MyProvider } from \'../provider\'\\nimport { CloudflareTest } from \'./cloudflare-test\'\\nimport { CloudfrontTest } from \'./cloudfront-test\'\\nimport { CloudflareProvider } from \'../../.gen/providers/cloudflare/provider\'\\n\\nexport interface TestStackProps {\\n  region?: string\\n}\\n```\\n\\nWe define several providers (this can also be done in providers.ts) because we use AWS S3 to host our files and Cloudflare as a standalone provider for DNS and CDN:\\n\\n```ts title=\\"/lib/index.ts\\"\\nexport class TestStack extends TerraformStack {\\n  constructor(scope: Construct, id: string, props?: TestStackProps) {\\n    super(scope, id)\\n\\n    // defining providers\\n    new AwsProvider(this, \'provider\', {\\n      profile: process.env.AWS_PROFILE,\\n      region: props?.region,\\n    })\\n    new CloudflareProvider(this, \'cloudflare-provider\', {\\n      apiToken: \'<YOUR_API_TOKEN>\',\\n    })\\n\\n    // enabling backend\\n    MyBackend.of(this, id)\\n\\n    // ---\\n\\n    const acmCertificateArn = \'<YOUR ACM CERTIFICATE ARN>\'\\n\\n    new CloudfrontTest(this, \'adil-s3-test\', {\\n      domain: \'<YOUR PURCHASED DOMAIN NAME>\',\\n      hostedZoneId: \'<YOUR HOSTED ZONE ID>\',\\n      acmCertificateArn,\\n    })\\n\\n    new CloudflareTest(this, \'cloudflare-test\', {\\n      domain: \'<YOUR PURCHASED DOMAIN NAME>\',\\n    })\\n  }\\n}\\n```\\n\\n- To get some of the credentials and other values like \\\\<YOUR_API_TOKEN\\\\>, refer to the `Using Cloudflare` section down below\\n\\n## Using Cloudflare\\n\\n### Additional prerequisites\\n\\nMake sure you have purchased a domain name that you can use to set up a Cloudflare site.\\n\\n### Getting an API Token\\n\\nGo to Cloudflare Dashboard and click \'My Profile\' on the top right corner of the page.\\n\\nThen, go to API Tokens and click \'Create Token\'.\\n\\nCreate a custom API Token with the following rules:\\n\\n![Image](https://content.hashicorp.com/api/assets?product=tutorials&version=main&asset=public%2Fimg%2Fterraform%2Fuse-cases%2Fcloudflare-static-website%2Fcustom-api-token-settings.png)\\n\\nYou can then use that token for CloudflareProvider initialization in the code snippet above\\n\\n### Setting up S3 bucket hosting\\n\\nHere we have to make sure our bucket is reachable, thus we set its ACL rule as \'public-read\' and security policy to allow PublicReadGetObject as in the code snippet below:\\n\\n```ts title=\\"/lib/cloudflare-test.ts\\"\\nconst s3_bucket = new S3Bucket(this, \'s3-bucket\', {\\n  bucket: props.domain,\\n})\\n\\nnew S3BucketAcl(this, \'s3-bucket-acl\', {\\n  bucket: s3_bucket.bucket,\\n  acl: \'public-read\',\\n})\\n\\nnew S3BucketPolicy(this, \'s3-bucket-policy\', {\\n  bucket: s3_bucket.bucket,\\n  policy: `{\\n        \\"Version\\": \\"2012-10-17\\",\\n        \\"Statement\\": [\\n          {\\n            \\"Sid\\": \\"PublicReadGetObject\\",\\n            \\"Effect\\": \\"Allow\\",\\n            \\"Principal\\": \\"*\\",\\n            \\"Action\\": [\\n              \\"s3:GetObject\\"\\n            ],\\n            \\"Resource\\": [\\n              \\"arn:aws:s3:::${props.domain}/*\\"\\n            ]\\n          }\\n        ]\\n      }`,\\n})\\n\\n// Static Website Hosting\\nconst website_\u0441onfiguration = new S3BucketWebsiteConfiguration(this, \'s3-website-configuration\', {\\n  bucket: s3_bucket.bucket,\\n  indexDocument: { suffix: \'index.html\' },\\n  errorDocument: { key: \'index.html\' },\\n})\\n```\\n\\nThen, we enable website hosting. Note, in older versions of hashicorp/aws provider all of these configurations can be done using just the \'S3Bucket\' object. In the latest versions, ACL, policy and other settings for the bucket have to be defined separately.\\n\\n<br />\\n\\n### Uploading static website files to S3 as S3 Objects\\n\\n```ts title=\\"/lib/cloudflare-test.ts\\"\\n// Get all the files from build folder, skip directories\\nconst files = glob.sync(\'./lib/web/build/**/*\', { absolute: false, nodir: true })\\n\\n// Create bucket object for each file\\nfor (const file of files) {\\n  new S3Object(this, `aws_s3_bucket_object_${path.basename(file)}`, {\\n    dependsOn: [s3_bucket], // Wait untill the bucket is not created\\n    key: file.replace(`./lib/web/build/`, \'\'), // Using relative path for folder structure on S3\\n    bucket: props.domain,\\n    source: path.resolve(file), // Using absolute path to upload\\n    etag: `${Date.now()}`,\\n    contentType: mime.contentType(path.extname(file)) || undefined, // Set the content-type for each object\\n  })\\n}\\n```\\n\\n\\\\*Note: Here a dependsOn parameter is used to wait for the bucket to be created before starting upload. Also, make sure to change the Terraform name of each S3Object accordingly.\\n\\n<br />\\n\\n### Adding Cloudflare CDN Records\\n\\nThen, we add a CNAME record to Cloudflare pointing to that S3 Bucket URL that is now publicly available (and www just in case):\\n\\n```ts title=\\"/lib/cloudflare-test.ts\\"\\nnew CloudflareRecord(this, \'cloudflare-record-naked\', {\\n  zoneId: \'2cdf31b7a1cd506ef0307f912181bfdc\',\\n  name: props.domain,\\n  value: website_\u0441onfiguration.websiteEndpoint,\\n  type: \'CNAME\',\\n  ttl: 1,\\n  proxied: true,\\n})\\n\\nnew CloudflareRecord(this, \'cloudflare-record-www\', {\\n  zoneId: \'2cdf31b7a1cd506ef0307f912181bfdc\',\\n  name: \'www\',\\n  value: props.domain,\\n  type: \'CNAME\',\\n  ttl: 1,\\n  proxied: true,\\n})\\n```\\n\\nThat\'s it. After running:\\n\\n```\\n$ cdktf deploy\\n```\\n\\nThe static website should now be available via your purchased domain\\n\\n<br />\\n\\n## Using Amazon CloudFront\\n\\n### Setting up an S3 Bucket\\n\\n<br />\\n\\nBefore we configure the bucket, we need Cloudfront Origin Access Identity to then use that in our bucket\'s IAM policy configuration:\\n\\n```ts title=\\"/lib/cloudfront-test.ts\\"\\nconst cloudfront_origin_access_identity = new CloudfrontOriginAccessIdentity(\\n  this,\\n  \'cloudfront-origin-access-identity\',\\n  { comment: props.domain }\\n)\\n```\\n\\nThis time the bucket can be made private and without website configuration:\\n\\n```ts title=\\"/lib/cloudfront-test.ts\\"\\nconst s3_bucket = new S3Bucket(this, \'s3-bucket\', {\\n  bucket: props.domain,\\n})\\n\\nnew S3BucketAcl(this, \'s3-bucket-acl\', {\\n  bucket: s3_bucket.bucket,\\n  acl: \'private\',\\n})\\n\\nnew S3BucketPolicy(this, \'s3-bucket-policy\', {\\n  bucket: s3_bucket.bucket,\\n  policy: `{\\n        \\"Version\\": \\"2012-10-17\\",\\n        \\"Statement\\": [\\n          {\\n            \\"Sid\\": \\"PublicReadGetObject\\",\\n            \\"Effect\\": \\"Allow\\",\\n            \\"Principal\\": {\\n              \\"AWS\\": \\"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${cloudfront_origin_access_identity.id}\\"\\n            },\\n            \\"Action\\": [\\n              \\"s3:GetObject\\"\\n            ],\\n            \\"Resource\\": [\\n              \\"arn:aws:s3:::${props.domain}/*\\"\\n            ]\\n          }\\n        ]\\n      }`,\\n})\\n```\\n\\n<br />\\n\\nThen, we add objects to the bucket in the same manner as with Cloudflare\\n\\nAfter which, the Cloudfront distribution is configured as such:\\n\\n```ts title=\\"/lib/cloudfront-test.ts\\"\\nconst cloudfront_distribution = new CloudfrontDistribution(this, `aws_cloudfront_${props.domain}`, {\\n  enabled: true,\\n  dependsOn: [s3_bucket],\\n  defaultRootObject: \'index.html\',\\n  aliases: [props.domain],\\n  customErrorResponse: [\\n    {\\n      errorCode: 404,\\n      responseCode: 200,\\n      responsePagePath: \'/index.html\',\\n    },\\n  ],\\n  origin: [\\n    {\\n      originId: originId,\\n      domainName: s3_bucket.bucketDomainName,\\n      s3OriginConfig: {\\n        originAccessIdentity: cloudfront_origin_access_identity.cloudfrontAccessIdentityPath,\\n      },\\n    },\\n  ],\\n  defaultCacheBehavior: {\\n    allowedMethods: [\'GET\', \'HEAD\'],\\n    cachedMethods: [\'GET\', \'HEAD\'],\\n    forwardedValues: {\\n      cookies: { forward: \'none\' },\\n      queryString: false,\\n    },\\n    targetOriginId: originId,\\n    viewerProtocolPolicy: \'allow-all\',\\n  },\\n  restrictions: {\\n    geoRestriction: {\\n      restrictionType: \'none\',\\n    },\\n  },\\n  viewerCertificate: {\\n    // *.glassdome.cloud \uc778\uc99d\uc11c\\n    acmCertificateArn: props.acmCertificateArn,\\n    minimumProtocolVersion: \'TLSv1.2_2021\',\\n    sslSupportMethod: \'sni-only\',\\n  },\\n})\\n```\\n\\n- Note: It\'s important to add \'aliases\' field for your domain to work.\\n\\n<br />\\n\\nAfter that, we need to create an A Record in Route 53 as such:\\n\\n```ts title=\\"/lib/cloudfront-test.ts\\"\\nnew Route53Record(this, \'route53-record\', {\\n  zoneId: props.hostedZoneId,\\n  type: \'A\',\\n  name: props.domain,\\n  alias: [\\n    {\\n      name: cloudfront_distribution.domainName,\\n      zoneId: cloudfront_distribution.hostedZoneId,\\n      evaluateTargetHealth: false,\\n    },\\n  ],\\n})\\n```\\n\\nThis will ensure the domain name works and points to the correct content.\\n\\n## Conclusion\\n\\nAs you might have noticed, the Cloudfront is slightly easier to set-up safely without exposing S3 Bucket URL to the public. However, Cloudflare might offer other additional safety and performance benefits after careful set up. For this tutorial, we only focused on the bare working minimum, so that\'ll do for now.\\n\\nThank you for reading."},{"id":"clickhouse","metadata":{"permalink":"/blog/clickhouse","source":"@site/blog/2022-11-03-clickhouse.md","title":"Installing Clickhouse on Kubernetes Hosted by NCloud and NHN Cloud","description":"This is a walkthrough of what I did to setup clickhouse databases on Kubernetes","date":"2022-11-03T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 3\uc77c","tags":[{"label":"clickhouse","permalink":"/blog/tags/clickhouse"},{"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"label":"helm","permalink":"/blog/tags/helm"},{"label":"ncloud","permalink":"/blog/tags/ncloud"},{"label":"nhn cloud","permalink":"/blog/tags/nhn-cloud"}],"readingTime":2.535,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"clickhouse","title":"Installing Clickhouse on Kubernetes Hosted by NCloud and NHN Cloud","authors":"mike","tags":["clickhouse","kubernetes","helm","ncloud","nhn cloud"]},"prevItem":{"title":"Deploying an S3 static website with CDK for Terraform on Cloudfront vs Cloudflare","permalink":"/blog/cdktf-cloudfront-cloudflare"},"nextItem":{"title":"Go Low Capacity Binary","permalink":"/blog/go-minimal-binart-eng"}},"content":"This is a walkthrough of what I did to setup clickhouse databases on Kubernetes\\n\\n\x3c!--truncate--\x3e\\n\\n## Intro to Clickhouse\\n\\nClickhouse is a column-oriented database management system (DBMS) for online analytical processing of queries (OLAP).\\n\\nClickhouse has great performance and can fufill our query needs at Glassdome. We were using Google Bigquery to fufill our databse needs, but the costs were becoming too expensive as we were scaling up. We also adopted a service agnostic approach that prevented us from relying on any one of the service.\\n\\n## Installing Clickhouse onto Kubernetes Cluster with Helm\\n\\nWe used the helm chart managed by [TrueCharts](https://artifacthub.io/packages/helm/truecharts/clickhouse) to install Clickhouse.\\n\\nWe used the following values to configure Clickhouse\\n\\n```values.yaml title=\\"values.yaml\\"\\nclickhouseDatabase: \\"<database name>\\"\\nclickhouseUsername: \\"<username>\\"\\nclickhousePassword: \\"<password>\\"\\n\\ntimezone: Asia/Seoul\\n\\nservice:\\n  main:\\n    ports:\\n      native:\\n        enabled: true\\n        port: 9000\\n        protocol: TCP\\n        targetPort: 9000\\n\\nportal:\\n  enabled: false\\n\\ningress:\\n  main:\\n    enabled: false\\n```\\n\\nUsing the value file, we installed the helm release\\n\\n```upgrade.sh title=\\"upgrade.sh\\"\\nhelm repo add truecharts https://charts.truecharts.org\\nhelm repo update\\n\\nNAME=\\"my-clickhouse\\"\\nNAMESPACE=\\"clickhouse\\"\\nCHART=\\"truecharts/clickhouse\\"\\nVERSION=\\"1.0.41\\"\\n\\nhelm upgrade --install $NAME $CHART --values values.yaml --version $VERSION --namespace $NAMESPACE --create-namespace\\n```\\n\\n## Installing on NCloud hosted Kubernetes Cluster\\n\\nNCloud should have deployed a storage class so the instructions listed above should work\\n\\n## Installing on NHN Cloud\\n\\nNHN Cloud is not as well executed as NCloud so there are extra steps that we need before deploying the helm chart\\n\\n### Deploying a Storage Class\\n\\nFollowing the instructions on the NHN Cloud documentation for [Storage Class](https://gov-docs.toast.com/ko/Container/NKS/ko/gov-user-guide/#2_2) we used the following command to create a storage class:\\n\\n```\\ncat <<EOF | kubectl apply -f -\\napiVersion: storage.k8s.io/v1\\nkind: StorageClass\\nmetadata:\\n  name: csi-storageclass\\nprovisioner: cinder.csi.openstack.org\\nvolumeBindingMode: WaitForFirstConsumer\\nEOF\\n```\\n\\n### Modify Values of helm chart\\n\\nNHN Cloud Storage has a strange problem where we don\'t have proper permissions to access files in the container that the Clickhouse chart deploys.\\n\\nThis was quite frustrating because there was no documentation in the helm chart or in NHN Cloud documentation.\\n\\nAfter a lot of trial and error, I got a configuration that was able to give the proper permissions to the container.\\n\\nThis is definitely not an ideal solution as it just gives root access to the container, but I could not find any other way to get it to work. Set the values as follows:\\n\\n```values-nhn.yaml title=\\"values-nhn.yaml\\"\\nclickhouseDatabase: \\"<database name>\\"\\nclickhouseUsername: \\"<username>\\"\\nclickhousePassword: \\"<password>\\"\\n\\ntimezone: Asia/Seoul\\n\\nservice:\\n  main:\\n    ports:\\n      native:\\n        enabled: true\\n        port: 9000\\n        protocol: TCP\\n        targetPort: 9000\\n\\nportal:\\n  enabled: false\\n\\ningress:\\n  main:\\n    enabled: false\\n\\nsecurityContext:\\n  runAsGroup: 0\\n  runAsNonRoot: false\\n  runAsUser: 0\\n```\\n\\nIt adds the values for securityContext so it runs as root.\\n\\n### Install using values-nhn.yaml\\n\\n```upgrade-nhn.yaml title=\\"upgrade-nhn.yaml\\"\\nhelm repo add truecharts https://charts.truecharts.org\\nhelm repo update\\n\\nNAME=\\"my-clickhouse\\"\\nNAMESPACE=\\"clickhouse\\"\\nCHART=\\"truecharts/clickhouse\\"\\nVERSION=\\"1.0.41\\"\\n\\nhelm upgrade --install $NAME $CHART --values values-nhn.yaml --version $VERSION --namespace $NAMESPACE --create-namespace\\n```\\n\\n## Testing\\n\\nFollwing these steps, should result in a working Clickhouse database\\n\\nWe deployed another application that would send queries to the Clickhouse database onto the Kubernetes Cluster\\n\\nTesting in Postman and on the actual production showed it works great\\n\\n:::note\\nI hope it was helpful. Thanks\\n:::"},{"id":"go-minimal-binart-eng","metadata":{"permalink":"/blog/go-minimal-binart-eng","source":"@site/blog/2022-11-01-go-minimal-binary-eng.md","title":"Go Low Capacity Binary","description":"Let\'s learn how to build a Go application with minimum capacity and deploy it as a container image.","date":"2022-11-01T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 1\uc77c","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":0.535,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"go-minimal-binart-eng","title":"Go Low Capacity Binary","authors":"mike","tags":["go","golang"]},"prevItem":{"title":"Installing Clickhouse on Kubernetes Hosted by NCloud and NHN Cloud","permalink":"/blog/clickhouse"},"nextItem":{"title":"Go \uc800\uc6a9\ub7c9 \ubc14\uc774\ub108\ub9ac","permalink":"/blog/go-minimal-binart"}},"content":"Let\'s learn how to build a Go application with minimum capacity and deploy it as a container image.\\n\\n\x3c!--truncate--\x3e\\n\\n## Dockerfile\\n\\n```Dockerfile title=\\"Dockerfile\\"\\nFROM golang:alpine as builder\\nCOPY . .\\nRUN apk update && \\\\\\n  apk upgrade && \\\\\\n  apk add --no-cache ca-certificates && \\\\\\n  apk add --update-cache tzdata && \\\\\\n  update-ca-certificates\\nRUN echo \\"nobody:x:65534:65534:nobody:/:\\" > /etc_passwd\\nENV GO111MODULE=on\\nENV CGO_ENABLED=0\\nENV GOOS=linux\\nENV GOARCH=amd64\\nWORKDIR /build\\nRUN go mod download\\nRUN go build -a -ldflags \'-s\' -o /main .\\n\\nFROM scratch\\nCOPY --from=builder /etc_passwd /etc/passwd\\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\\nCOPY --from=builder /usr/local/go/lib/time/zoneinfo.zip /\\nCOPY --from=builder /main .\\nENV ZONEINFO=/zoneinfo.zip\\nEXPOSE 8080\\nUSER nobody\\nENTRYPOINT [\\"./main\\"]\\n```"},{"id":"go-minimal-binart","metadata":{"permalink":"/blog/go-minimal-binart","source":"@site/blog/2022-11-01-go-minimal-binary.md","title":"Go \uc800\uc6a9\ub7c9 \ubc14\uc774\ub108\ub9ac","description":"Go \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucd5c\uc18c \uc6a9\ub7c9\uc73c\ub85c \ube4c\ub4dc\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c \ubc30\ud3ec\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.","date":"2022-11-01T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 1\uc77c","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":0.645,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"go-minimal-binart","title":"Go \uc800\uc6a9\ub7c9 \ubc14\uc774\ub108\ub9ac","authors":"david","tags":["go","golang"]},"prevItem":{"title":"Go Low Capacity Binary","permalink":"/blog/go-minimal-binart-eng"},"nextItem":{"title":"Discussion about Go Language and Project Structure","permalink":"/blog/go-project-structure-eng"}},"content":"Go \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucd5c\uc18c \uc6a9\ub7c9\uc73c\ub85c \ube4c\ub4dc\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c \ubc30\ud3ec\ud558\ub294 \ubc29\ubc95\uc744 \uc54c\uc544\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## Dockerfile\\n\\n```Dockerfile title=\\"Dockerfile\\"\\nFROM golang:alpine as builder\\nCOPY . .\\nRUN apk update && \\\\\\n  apk upgrade && \\\\\\n  apk add --no-cache ca-certificates && \\\\\\n  apk add --update-cache tzdata && \\\\\\n  update-ca-certificates\\nRUN echo \\"nobody:x:65534:65534:nobody:/:\\" > /etc_passwd\\nENV GO111MODULE=on\\nENV CGO_ENABLED=0\\nENV GOOS=linux\\nENV GOARCH=amd64\\nWORKDIR /build\\nRUN go mod download\\nRUN go build -a -ldflags \'-s\' -o /main .\\n\\nFROM scratch\\nCOPY --from=builder /etc_passwd /etc/passwd\\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\\nCOPY --from=builder /usr/local/go/lib/time/zoneinfo.zip /\\nCOPY --from=builder /main .\\nENV ZONEINFO=/zoneinfo.zip\\nEXPOSE 8080\\nUSER nobody\\nENTRYPOINT [\\"./main\\"]\\n```"},{"id":"go-project-structure-eng","metadata":{"permalink":"/blog/go-project-structure-eng","source":"@site/blog/2022-11-01-go-project-structure-eng.md","title":"Discussion about Go Language and Project Structure","description":"This is a discussion about the directory structure of Go applications.","date":"2022-11-01T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 1\uc77c","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":4.045,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"go-project-structure-eng","title":"Discussion about Go Language and Project Structure","authors":"mike","tags":["go","golang"]},"prevItem":{"title":"Go \uc800\uc6a9\ub7c9 \ubc14\uc774\ub108\ub9ac","permalink":"/blog/go-minimal-binart"},"nextItem":{"title":"Go \uc5b8\uc5b4\uc640 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30","permalink":"/blog/go-project-structure"}},"content":"This is a discussion about the directory structure of Go applications.\\n\\n\x3c!--truncate--\x3e\\n\\n## Introduction to Go\\n\\nI got to know Go on the 2015 podcast [\\"I\'m a Programmer\\"](https://www.podbbang.com/channels/9126) episode [\\"The Go Language Attraction of Google Engineers\\"](https://www.podbbang.com/channels/9126/episodes/21668083). [Yeom Jae-hyun](https://www.linkedin.com/in/jaehyunyeom), who worked as a Google engineer, appeared on the show and talked about the Go language while publishing a book called [\\"Discovery Go\\"](https://www.yes24.com/Product/Goods/24759320). And I did a little tutorial through a Go study group, but I haven\'t actually used Go in practice since.\\n\\nGlassdome uses Go language to develop applications.\\n\\n## The Benefits of Go\\n\\nFirst off, Go is quite popular in the industry. It\'s a language that I believe will continue to be popular.\\n\\nThe syntax resembles C, which is learned in basically any school.\\n\\nAt the same time, it is easier to use than C. (obviously)\\n\\nFurthermore, it performs better than VM or script engine-based languages.\\n\\nAnother advantage that I found was,\\n\\nGo applications are statically compiled, minimizing runtime dependence, and are very small when built with a container image.\\n\\n[Empty container without even an OS](https://hub.docker.com/_/scratch) can only be run by inserting the Go binary. Therefore, it takes less time to upload images when developing and deploying, and less time to download container images from the Kubernetes node and less time to prepare for execution.\\n\\n:::info Go Container Image Size\\nWhen you build a Web application server with JVM or NodeJS, no matter how small you try to make it, it can easily exceed 100MBs and even become hundreds of MBs. On the other hand, you can create a Go container of less than 10 MB even if you include all the packages you need.\\n:::\\n\\n## Install Go\\n\\n:::tip\\nWe recommend that you install it as a GVM.\\n:::\\n\\n```\\ngvm install go1.19\\n```\\n\\n## Go Project Structure\\n\\nBecause Go syntax is easy, developers who have used other programming languages can adapt quickly.\\n\\nBut sometimes when looking at the code you might not know what to do.\\n\\nFor example, how do you capture the directory structure of the Go project?\\n\\nToday I\'m going to talk about this.\\n\\n:::info\\nThe document you want to refer to is [Standard Go Project Layout](https://github.com/golang-standards/project-layout).\\n:::\\n\\n### The Go Project is a Module\\n\\nSince Go 1.14, Go has had the the concept of a Module.\\n\\nBefore the Go Module came out, Go had a structure where dependency packages were gathered and installed in the same place the execution environment was installed (GOPATH); which is similar to Python.\\n\\n:::info\\nSimilarly, if you do not use venv in Python the package is installed in the python installation path `python-x.y.z/site-packages/`.\\n:::\\n\\nBut we don\'t need to go over old information, you can consider **all the latest Go releases as using Go Modules**.\\n\\nDependent packages are managed separately for each module.\\n\\n:::info\\nGo Module = Project (in other languages)\\n:::\\n\\n### Getting Started with Go Module\\n\\nLet\'s make a module called `mymodule`.\\n\\n```\\nmkdir mymodule\\ncd mymodule\\n\\ngo mod init github.com/glassdomeinc/mymodule\\n```\\n\\nThe file `go.mod` is created.\\n\\n```go title=\\"go.mod\\"\\nmodule github.com/glassdomeinc/mymodule\\n\\ngo 1.19\\n```\\n\\n### No Separate src Directory, module is root package\\n\\nIn JVM languages, including Java, the path that the compiler recognizes as a source code file is conventionally defined as `src/main/java`.\\n\\nBut instead of having that rule in Go, the Go module directory itself becomes the root package for that module.\\n\\nIf you look at many Go open source projects hosted on GitHub, you can see that the repository itself is a Go Module that contains the source code `*.go` directly in the root directory.\\n\\n```\\n+ mymodule/\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\nYou can also put the `go.mod` and source code `*.go` files side by side in the module root directory.\\n\\n```go title=\\"myfile.go\\"\\npackage mymodule\\n\\nfunc Xxx() {\\n  ...\\n}\\n```\\n\\n### The main package (entry point code) is located under the `cmd/` directory\\n\\n```go title=\\"main.go\\"\\npackage main\\n\\nfunc main() {\\n  ...\\n}\\n```\\n\\nThe entry point code for the Go application is written in a reserved package called `main`. However, the `main` package cannot be placed in the same directory as any other generic package. If you place `main.go` in the root path of the module, it will take away the root package digits (most importantly) where the other source code files will fit.\\n\\nTherefore, `main.go` is placed in the `cmd/` directory instead of the module\'s root path.\\n\\n```\\n+ mymodule/\\n+-+ cmd/\\n| +-- main.go\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\n(We don\'t really execute this well) If there are multiple entry points, place them in each subdirectory under `cmd/`.\\n\\n:::caution\\nThere can only be 0~1 `main` in each directory\\n:::\\n\\n```\\n+ mymodule/\\n+-+ cmd/\\n| +-+ main1\\n| | +-- main.go\\n| +-+ main2\\n|   +-- main.go\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\n:::caution\\nWork in Progress \ud83d\udea7\\n:::"},{"id":"go-project-structure","metadata":{"permalink":"/blog/go-project-structure","source":"@site/blog/2022-11-01-go-project-structure.md","title":"Go \uc5b8\uc5b4\uc640 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30","description":"Go \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub514\ub809\ud130\ub9ac \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30\uc785\ub2c8\ub2e4.","date":"2022-11-01T00:00:00.000Z","formattedDate":"2022\ub144 11\uc6d4 1\uc77c","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"golang","permalink":"/blog/tags/golang"}],"readingTime":7.365,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"go-project-structure","title":"Go \uc5b8\uc5b4\uc640 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30","authors":"david","tags":["go","golang"]},"prevItem":{"title":"Discussion about Go Language and Project Structure","permalink":"/blog/go-project-structure-eng"},"nextItem":{"title":"Updating Packages Periodically (brew, nvm, npm, yarn, etc.)","permalink":"/blog/package-update-eng"}},"content":"Go \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub514\ub809\ud130\ub9ac \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30\uc785\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## Go \uc5b8\uc5b4\uc640\uc758 \ub9cc\ub0a8\\n\\n\uc81c\uac00 Go\ub97c \uc54c\uac8c \ub41c \uac83\uc740 2015\ub144 \ud31f\uce90\uc2a4\ud2b8 [\\"\ub098\ub294 \ud504\ub85c\uadf8\ub798\uba38\ub2e4\\"](https://www.podbbang.com/channels/9126) \uc5d0\ud53c\uc18c\ub4dc [\\"\uad6c\uae00 \uc5d4\uc9c0\ub2c8\uc5b4\uac00 \ub9d0\ud558\ub294 Go\uc5b8\uc5b4\uc758 \ub9e4\ub825\\"](https://www.podbbang.com/channels/9126/episodes/21668083)\uc5d0\uc11c\uc600\uc2b5\ub2c8\ub2e4. Google \uc5d4\uc9c0\ub2c8\uc5b4\ub85c \uc77c\ud588\ub358 [\uc5fc\uc7ac\ud604](https://www.linkedin.com/in/jaehyunyeom) \ub2d8\uc774 [\\"\ub514\uc2a4\ucee4\ubc84\ub9ac Go\\"](https://www.yes24.com/Product/Goods/24759320)\ub77c\ub294 \ucc45\uc744 \ub0b4\uba74\uc11c \ubc29\uc1a1\uc5d0 \ucd9c\uc5f0\ud574 Go \uc5b8\uc5b4\uc5d0 \uad00\ud574 \uc774\uc57c\uae30\ub97c \ud574\uc8fc\uc5c8\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 Go \uc2a4\ud130\ub514 \uadf8\ub8f9\uc744 \ud1b5\ud574 \ud29c\ud1a0\ub9ac\uc5bc\uc744 \uc870\uae08 \ud574\ubcf4\uc558\uc2b5\ub2c8\ub2e4\ub9cc, \uadf8\ud6c4\ub85c \uc0ac\uc2e4\uc0c1 \uc2e4\ubb34\uc801\uc73c\ub85c Go\ub97c \uc0ac\uc6a9\ud55c \uc801\uc740 \uc5c6\uc5c8\uc2b5\ub2c8\ub2e4.\\n\\n\uae00\ub798\uc2a4\ub3d4\uc5d0\uc11c\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c\uc5d0 Go \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n## Go \uc5b8\uc5b4\uc758 \uc7a5\uc810\\n\\nGo\uc5b8\uc5b4\ub294 \uc77c\ub2e8 \uc5c5\uacc4\uc5d0\uc11c \uc778\uae30\uac00 \ub9ce\uc2b5\ub2c8\ub2e4. \uc55e\uc73c\ub85c\ub3c4 \uc798 \ub098\uac08 \uc5b8\uc5b4\ub77c\ub294 \uac83\uc785\ub2c8\ub2e4.\\n\\n\ucf54\ub4dc \ubb38\ubc95\uc740 \uc5b4\ub290 \ud559\uad50\uc5d0\uc11c\ub3c4 \uae30\ubcf8\uc801\uc73c\ub85c \ub2e4 \ubc30\uc6b0\ub294 C\uc5b8\uc5b4\ub97c \ub2ee\uc558\uc2b5\ub2c8\ub2e4.\\n\\n\uadf8\ub7ec\uba74\uc11c\ub3c4 C \ubcf4\ub2e4 \uc0ac\uc6a9\ud558\uae30 \uc88b\uc2b5\ub2c8\ub2e4. (\ub2f9\uc5f0\ud55c \ub9d0\uc774\uc9c0\ub9cc)\\n\\n\uadf8\ub9ac\uace0 VM\uc774\ub098 \uc2a4\ud06c\ub9bd\ud2b8 \uc5d4\uc9c4 \uae30\ubc18 \uc5b8\uc5b4\ubcf4\ub2e4 \uc131\ub2a5\uc774 \ub354 \uc88b\uc2b5\ub2c8\ub2e4.\\n\\n\ub610 \uc81c\uac00 \ubc1c\uacac\ud55c \ub610 \ud55c\uac00\uc9c0 \uc7a5\uc810\uc740,\\n\\nGo \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc815\uc801\uc73c\ub85c \ucef4\ud30c\uc77c\ub418\uc5b4 \uc2e4\ud589\uc2dc\uac04 \uc758\uc874\uc131\uc744 \ucd5c\uc18c\ud654\ud558\uc5ec \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub85c \ube4c\ub4dc\ud588\uc744 \ub54c \ud06c\uae30\uac00 \uc544\uc8fc \uc791\uac8c \ub098\uc635\ub2c8\ub2e4.\\n\\n[OS \uc870\ucc28 \uc5c6\ub294 \ube48 \ucee8\ud14c\uc774\ub108](https://hub.docker.com/_/scratch)\uc5d0 Go \ubc14\uc774\ub108\ub9ac\ub9cc \uc9d1\uc5b4\ub123\uc5b4\uc11c \uc2e4\ud589\ud558\ub294 \uac8c \uac00\ub2a5\ud569\ub2c8\ub2e4. \uadf8\ub798\uc11c \uac1c\ubc1c\ud558\uace0 \ubc30\ud3ec\ud560 \ub54c \uc774\ubbf8\uc9c0 \uc5c5\ub85c\ub4dc \uc2dc\uac04\uc774 \uc801\uac8c \ub4e4\uace0, Kubernetes \ub178\ub4dc\uc5d0\uc11c \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0\ub97c \ub2e4\uc6b4\ub85c\ub4dc \ud558\ub294 \uc2dc\uac04\uacfc \uc2e4\ud589 \uc900\ube44 \uc2dc\uac04\ub3c4 \uc801\uac8c \ub4ed\ub2c8\ub2e4.\\n\\n:::info Go \ucee8\ud14c\uc774\ub108 \uc774\ubbf8\uc9c0 \ud06c\uae30\\nJVM\uc774\ub098 NodeJS\uac00 \ub4e4\uc5b4\uac04 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc11c\ubc84\ub97c \ube4c\ub4dc\ud558\uba74, \uc544\ubb34\ub9ac \uc791\uac8c \ub9cc\ub4e4\ub824\uace0 \ud574\ub3c4 100MB\uac00 \uc27d\uac8c \ub118\uc5b4\uac00\uace0 \uc2ec\uc9c0\uc5b4 \uc218\ubc31 MB\uac00 \ub418\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub7f0\ub370 Go \ucee8\ud14c\uc774\ub108\ub294 \ud544\uc694\ud55c \ud328\ud0a4\uc9c0\ub97c \ub2e4 \ud3ec\ud568\ud574\ub3c4 10MB \ubbf8\ub9cc\uc73c\ub85c \uc0dd\uc131\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n:::\\n\\n## Go \uc124\uce58\\n\\n:::tip\\nGVM\uc73c\ub85c \uc124\uce58\ud558\ub294 \uac8c \uc88b\uc2b5\ub2c8\ub2e4.\\n:::\\n\\n```\\ngvm install go1.19\\n```\\n\\n## Go \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\\n\\nGo \ubb38\ubc95\uc740 \uc27d\uae30 \ub54c\ubb38\uc5d0 \ub2e4\ub978 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\ub97c \uc0ac\uc6a9\ud574\ubcf8 \uac1c\ubc1c\uc790\ub4e4\uc740 \uae08\ubc29 \uc801\uc751\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ud558\uc9c0\ub9cc \ucf54\ub4dc \uc678 \ubd80\ubd84\ub4e4\uc740 Go\uc5d0\uc11c\ub294 \uc5b4\ub5bb\uac8c \ud574\uc57c\ud558\ub294\uc9c0 \uad81\uae08\ud560 \ub54c\uac00 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uc608\ub97c \ub4e4\uba74 Go \ud504\ub85c\uc81d\ud2b8\uc758 \ub514\ub809\ud130\ub9ac \uad6c\uc870\ub97c \uc5b4\ub5bb\uac8c \uc7a1\uc544\uc57c \ud558\ub294 \uac83\ub4e4\uc774 \uc788\uc9c0\uc694.\\n\\n\uc624\ub298\uc740 \uc774\uc5d0 \uad00\ud574 \uc598\uae30\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n:::info\\n\ucc38\uace0\ud560 \ubb38\uc11c\ub294 [Standard Go Project Layout](https://github.com/golang-standards/project-layout)\uc785\ub2c8\ub2e4.\\n:::\\n\\n### Go \ud504\ub85c\uc81d\ud2b8\ub294 \ubaa8\ub4c8\uc774\ub2e4\\n\\nGo 1.14\ubd80\ud130 Go\uc5d0\ub294 Module\uc774\ub77c\ub294 \uac1c\ub150\uc774 \uc0dd\uacbc\uc2b5\ub2c8\ub2e4.\\n\\nGo Module\uc774 \ub098\uc624\uae30 \uc804\uc758 Go\ub294 Python\uacfc \uac19\uc774 \uae30\ubcf8\uc801\uc73c\ub85c \uc2e4\ud589 \ud658\uacbd\uc774 \uc124\uce58\ub41c \uacf3(GOPATH)\uc5d0 \uc758\uc874 \ud328\ud0a4\uc9c0\uac00 \ubaa8\uc5ec\uc11c \uc124\uce58\ub418\ub294 \uad6c\uc870\uc600\uc2b5\ub2c8\ub2e4.\\n\\n:::info\\nPython\uc5d0\uc11c\ub3c4 \ub9c8\ucc2c\uac00\uc9c0\ub85c venv\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0, python \uc124\uce58 \uacbd\ub85c `python-x.y.z/site-packages/`\uc5d0 \ud328\ud0a4\uc9c0\uac00 \uc124\uce58\ub429\ub2c8\ub2e4.\\n:::\\n\\n\ud558\uc9c0\ub9cc \uc9c0\uae08\uc5d0\uc11c\ub294 \uc61b\ub0a0 \uc774\uc57c\uae30\ub97c \ud560 \ud544\uc694\ub294 \uc5c6\uace0, **\uadf8\ub0e5 \uc694\uc998 \ub098\uc624\ub294 Go\ub294 \ubaa8\ub450 \ub2e4 Go Module**\uc774\ub77c\uace0 \ubcf4\uba74 \ub429\ub2c8\ub2e4.\\n\\n\uac01 \ubaa8\ub4c8\ub9c8\ub2e4 \uc758\uc874 \ud328\ud0a4\uc9c0\ub294 \ub530\ub85c \uad00\ub9ac\ub429\ub2c8\ub2e4.\\n\\n:::info\\nGo Module = (\ub2e4\ub978 \uc5b8\uc5b4\uc5d0\uc11c\uc758) \ud504\ub85c\uc81d\ud2b8\\n:::\\n\\n### Go Module \uc2dc\uc791\ud558\uae30\\n\\n`mymodule`\uc774\ub77c\ub294 \ubaa8\ub4c8\uc744 \ub9cc\ub4e4\uc5b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n```\\nmkdir mymodule\\ncd mymodule\\n\\ngo mod init github.com/glassdomeinc/mymodule\\n```\\n\\n`go.mod` \ud30c\uc77c\uc774 \uc0dd\uc131\ub429\ub2c8\ub2e4.\\n\\n```go title=\\"go.mod\\"\\nmodule github.com/glassdomeinc/mymodule\\n\\ngo 1.19\\n```\\n\\n### src \ub514\ub809\ud130\ub9ac\uac00 \ub530\ub85c \uc5c6\uace0, \ubaa8\ub4c8\uc774 \ub8e8\ud2b8 \ud328\ud0a4\uc9c0\\n\\nJava\ub97c \ube44\ub86f\ud55c JVM \uacc4\uc5f4 \uc5b8\uc5b4\ub4e4\uc740 \ucef4\ud30c\uc77c\ub7ec\uac00 \uc18c\uc2a4\ucf54\ub4dc \ud30c\uc77c\ub85c \uc778\uc2dd\ud558\ub294 \uacbd\ub85c\uac00 `src/main/java` \ub4f1\uc73c\ub85c \uad00\uc2b5\uc801\uc73c\ub85c \uc815\ud574\uc838\uc788\uc2b5\ub2c8\ub2e4.\\n\\n\ud558\uc9c0\ub9cc Go\uc5d0\ub294 \uadf8\ub7f0 \uaddc\uce59\uc740 \uc5c6\ub294 \ub300\uc2e0, Go \ubaa8\ub4c8 \ub514\ub809\ud130\ub9ac \uc790\uccb4\uac00 \uace7 \uadf8 \ubaa8\ub4c8\uc758 \ub8e8\ud2b8 \ud328\ud0a4\uc9c0\uac00 \ub429\ub2c8\ub2e4.\\n\\nGitHub\uc5d0 \ud638\uc2a4\ud305\ub41c \ub9ce\uc740 Go \uc624\ud508\uc18c\uc2a4 \ud504\ub85c\uc81d\ud2b8\ub97c \ubcf4\uba74 \uc800\uc7a5\uc18c \uc790\uccb4\uac00 Go Module\uc774\uace0 \ub8e8\ud2b8 \ub514\ub809\ud130\ub9ac\uc5d0 `*.go` \uc18c\uc2a4\ucf54\ub4dc\uac00 \ubc14\ub85c \uc788\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n```\\n+ mymodule/\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\n\uc774\ub807\uac8c \ubaa8\ub4c8 \ub8e8\ud2b8 \ub514\ub809\ud130\ub9ac\uc5d0 `go.mod`\uc640 \uc18c\uc2a4\ucf54\ub4dc `*.go` \ud30c\uc77c\uc744 \ub098\ub780\ud788 \ub123\uc5b4\ub3c4 \ub429\ub2c8\ub2e4.\\n\\n```go title=\\"myfile.go\\"\\npackage mymodule\\n\\nfunc Xxx() {\\n  ...\\n}\\n```\\n\\n### main \ud328\ud0a4\uc9c0(\uc9c4\uc785\uc810 \ucf54\ub4dc)\uc740 `cmd/` \ub514\ub809\ud130\ub9ac \uc544\ub798\uc5d0\\n\\n```go title=\\"main.go\\"\\npackage main\\n\\nfunc main() {\\n  ...\\n}\\n```\\n\\nGo \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uc9c4\uc785\uc810 \ucf54\ub4dc\ub294 `main`\uc774\ub77c\ub294 \uc608\uc57d\ub41c \ud328\ud0a4\uc9c0\uc5d0 \uc791\uc131\ud569\ub2c8\ub2e4. \uadf8\ub7f0\ub370 `main` \ud328\ud0a4\uc9c0\ub294 \ub2e4\ub978 \uc77c\ubc18 \ud328\ud0a4\uc9c0\uc640 \uac19\uc740 \ub514\ub809\ud130\ub9ac \ub0b4\uc5d0 \ubc30\uce58\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. `main.go`\ub97c \ubaa8\ub4c8\uc758 \ub8e8\ud2b8 \uacbd\ub85c\uc5d0 \ubc30\uce58\ud574\ubc84\ub9ac\uba74 \ub2e4\ub978 \uc18c\uc2a4\ucf54\ub4dc \ud30c\uc77c\uc774 \ub4e4\uc5b4\uac08 \ub8e8\ud2b8 \ud328\ud0a4\uc9c0 \uc790\ub9ac(\uac00\uc7a5 \uc911\uc694\ud55c \uacf3)\ub97c \ube8f\ub294 \ubaa8\uc591\uc774 \ub429\ub2c8\ub2e4.\\n\\n\uadf8\ub798\uc11c `main.go`\ub294 \ubaa8\ub4c8\uc758 \ub8e8\ud2b8 \uacbd\ub85c \ub300\uc2e0 `cmd/` \ub514\ub809\ud130\ub9ac\uc5d0 \ubc30\uce58\ud569\ub2c8\ub2e4.\\n\\n```\\n+ mymodule/\\n+-+ cmd/\\n| +-- main.go\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\n(\uc6b0\ub9ac\ub294 \uc774\ub807\uac8c \uc798 \uc0ac\uc6a9\ud558\uc9c0\ub294 \uc54a\uc9c0\ub9cc) \ub9cc\uc57d \uc9c4\uc785\uc810\uc774 \uc5ec\ub7ec \uac1c\uba74, `cmd/` \uc544\ub798 \uc11c\ube0c \ub514\ub809\ud130\ub9ac\uc5d0 \uac01\uac01 \ubc30\uce58\ud569\ub2c8\ub2e4.\\n\\n:::caution\\n\ud55c \ub514\ub809\ud130\ub9ac\uc5d0 `main` \ud328\ud0a4\uc9c0\ub294 0~1\uac1c\ub9cc \uc874\uc7ac\ud574\uc57c \ud569\ub2c8\ub2e4.\\n:::\\n\\n```\\n+ mymodule/\\n+-+ cmd/\\n| +-+ main1\\n| | +-- main.go\\n| +-+ main2\\n|   +-- main.go\\n+-- go.mod\\n+-- go.sum\\n+-- README.md\\n+-- myfile.go\\n```\\n\\n:::caution\\n\uc791\uc131\uc911\uc785\ub2c8\ub2e4 \ud83d\udea7\\n:::"},{"id":"package-update-eng","metadata":{"permalink":"/blog/package-update-eng","source":"@site/blog/2022-10-30-package-update-eng.md","title":"Updating Packages Periodically (brew, nvm, npm, yarn, etc.)","description":"TL;DR","date":"2022-10-30T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 30\uc77c","tags":[{"label":"homebrew","permalink":"/blog/tags/homebrew"},{"label":"nvm","permalink":"/blog/tags/nvm"},{"label":"npm","permalink":"/blog/tags/npm"},{"label":"yarn","permalink":"/blog/tags/yarn"}],"readingTime":0.575,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"package-update-eng","title":"Updating Packages Periodically (brew, nvm, npm, yarn, etc.)","authors":"mike","tags":["homebrew","nvm","npm","yarn"]},"prevItem":{"title":"Go \uc5b8\uc5b4\uc640 \ud504\ub85c\uc81d\ud2b8 \uad6c\uc870\uc5d0 \uad00\ud55c \uc774\uc57c\uae30","permalink":"/blog/go-project-structure"},"nextItem":{"title":"\uc8fc\uae30\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8 (brew, nvm, npm, yarn \ub4f1)","permalink":"/blog/package-update"}},"content":"## TL;DR\\n\\n```\\nbrew update\\nbrew upgrade\\nnvm install --lts\\nnpm install -g npm\\nnpm install -g yarn\\n```\\n\\nIt is recommended that you upgrade your package as soon as a new version or patch comes out.\\n\\nPlease upgrade at least once a week.\\n\\n:::info\\nI do it once a week.\\n:::\\n\\n\x3c!--truncate--\x3e\\n\\n## Upgrading the homebrew Package\\n\\nUpgrade several packages at once.\\n\\n```\\nbrew update\\nbrew upgrade\\n```\\n\\n## node, npm, yarn Upgrade\\n\\nUpgrade NodeJS.\\n\\n```\\nnvm install --lts\\n```\\n\\n[Upgrade npm](https://docs.npmjs).com/try-the-latest-stable-version-of-npm#upgrading-on-nix-osx-linux-etc).\\n\\n```\\nnpm install -g npm\\n```\\n\\nUpgrade yarn.\\n\\n```\\nnpm install -g yarn\\n```\\n\\n:::tip\\nInstead of installing yarn separately, it is more convenient to install it as an npm package.\\n:::"},{"id":"package-update","metadata":{"permalink":"/blog/package-update","source":"@site/blog/2022-10-30-package-update.md","title":"\uc8fc\uae30\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8 (brew, nvm, npm, yarn \ub4f1)","description":"TL;DR","date":"2022-10-30T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 30\uc77c","tags":[{"label":"homebrew","permalink":"/blog/tags/homebrew"},{"label":"nvm","permalink":"/blog/tags/nvm"},{"label":"npm","permalink":"/blog/tags/npm"},{"label":"yarn","permalink":"/blog/tags/yarn"}],"readingTime":1.08,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"package-update","title":"\uc8fc\uae30\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8 (brew, nvm, npm, yarn \ub4f1)","authors":"david","tags":["homebrew","nvm","npm","yarn"]},"prevItem":{"title":"Updating Packages Periodically (brew, nvm, npm, yarn, etc.)","permalink":"/blog/package-update-eng"},"nextItem":{"title":"Installing NodeJS with NVM","permalink":"/blog/install-nodejs-with-nvm-eng"}},"content":"## TL;DR\\n\\n```\\nbrew update\\nbrew upgrade\\nnvm install --lts\\nnpm install -g npm\\nnpm install -g yarn\\n```\\n\\n\uc0ac\uc6a9\ud558\ub294 \ud328\ud0a4\uc9c0\uc758 \uc0c8 \ubc84\uc804\uc774\ub098 \ud328\uce58\uac00 \ub098\uc624\uba74 \uadf8\ub54c\uadf8\ub54c \ubc14\ub85c \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ud574\uc8fc\ub294 \uac83\uc774 \uc88b\uc2b5\ub2c8\ub2e4.\\n\\n\uc801\uc5b4\ub3c4 \uc77c\uc8fc\uc77c\uc5d0 \ud55c \ubc88\uc774\ub77c\ub3c4 \uaf2d \uc5c5\uadf8\ub808\uc774\ub4dc\ub97c \ud574\uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.\\n\\n:::info\\n\uc800\ub294 \ub9e4\uc8fc \ud55c \ubc88\uc529 \ud569\ub2c8\ub2e4.\\n:::\\n\\n\x3c!--truncate--\x3e\\n\\n## homebrew \ud328\ud0a4\uc9c0 \uc5c5\uadf8\ub808\uc774\ub4dc\\n\\n\uc5ec\ub7ec\uac00\uc9c0 \ud328\ud0a4\uc9c0\ub97c \ud55c\uaebc\ubc88\uc5d0 \uc5c5\uadf8\ub808\uc774\ub4dc \ud569\ub2c8\ub2e4.\\n\\n```\\nbrew update\\nbrew upgrade\\n```\\n\\n## node, npm, yarn \uc5c5\uadf8\ub808\uc774\ub4dc\\n\\nNodeJS\ub97c \uc5c5\uadf8\ub808\uc774\ub4dc \ud569\ub2c8\ub2e4.\\n\\n```\\nnvm install --lts\\n```\\n\\n[npm\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc](https://docs.npmjs.com/try-the-latest-stable-version-of-npm#upgrading-on-nix-osx-linux-etc) \ud569\ub2c8\ub2e4.\\n\\n```\\nnpm install -g npm\\n```\\n\\nyarn\uc744 \uc5c5\uadf8\ub808\uc774\ub4dc \ud569\ub2c8\ub2e4.\\n\\n```\\nnpm install -g yarn\\n```\\n\\n:::tip\\nyarn\uc744 \ubcc4\ub3c4\ub85c \uc124\uce58\ud558\ub294 \ub300\uc2e0, npm \ud328\ud0a4\uc9c0\ub85c \uc124\uce58\ud558\ub294 \uac83\uc774 \ub354 \ud3b8\ub9ac\ud569\ub2c8\ub2e4.\\n:::"},{"id":"install-nodejs-with-nvm-eng","metadata":{"permalink":"/blog/install-nodejs-with-nvm-eng","source":"@site/blog/2022-10-29-install-nodejs-with-nvm-eng.mdx","title":"Installing NodeJS with NVM","description":"NVM is a tool that allows you to install multiple versions of NodeJS and replace them as needed.","date":"2022-10-29T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 29\uc77c","tags":[{"label":"nodejs","permalink":"/blog/tags/nodejs"}],"readingTime":3.165,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"install-nodejs-with-nvm-eng","title":"Installing NodeJS with NVM","authors":"mike","tags":["nodejs"]},"prevItem":{"title":"\uc8fc\uae30\uc801\uc73c\ub85c \ud328\ud0a4\uc9c0 \uc5c5\ub370\uc774\ud2b8 (brew, nvm, npm, yarn \ub4f1)","permalink":"/blog/package-update"},"nextItem":{"title":"NVM\uc73c\ub85c NodeJS \uc124\uce58\ud558\uae30","permalink":"/blog/install-nodejs-with-nvm"}},"content":"import Tabs from \'@theme/Tabs\'\\nimport TabItem from \'@theme/TabItem\'\\n\\nNVM is a tool that allows you to install multiple versions of NodeJS and replace them as needed.\\n\\n\x3c!--truncate--\x3e\\n\\n## TypeScript and NodeJS\\n\\nThe following programming languages are commonly used in Glassdome:\\n\\n- Software Development Team\\n  - Backend Server Application Development: Go\\n  - Frontend Client Web Application Development: TypeScript\\n- Infra Team: Go, TypeScript\\n- AI/Data Team: Python\\n\\nAmong them, the Infra team needs a scripting language for cloud development and infrastructure management, mainly using TypeScript.\\n\\n**NodeJS is required to run TypeScript** so NodeJS must be installed first.\\n\\n## NVM (Node Version Manager)\\n\\nNVM is a tool that allows you to install multiple versions of NodeJS and replace them as needed.\\n\\n:::tip\\nSimilarly, [Go](https://go.dev/) has [GVM](https://github.com/moovweb/gvm)) that installs and manages multiple versions.\\n:::\\n\\nLet\'s assume the following circumstances:\\n\\n- Use Node 16 for AWS Lambda Function\\n- Use Node 17 when developing front-end web applications\\n- Server applications use Node 18\\n\\nBecause you have to install multiple versions on one PC, upgrade or patch versions, and switch between them it would be very inconvenient to simply install one version.\\n\\n:::caution\\nSo I don\'t recommend following the download and installation instructions on the NodeJS website.\\n:::\\n\\nIt is more convenient to use NVM to install NodeJS and manage the version.\\n\\n## How to Install\\n\\n:::info\\n[Install & Update Script](https://github.com/nvm-sh/nvm#install--update-script)\\n:::\\n\\n<Tabs>\\n  <TabItem value=\\"curl\\" label=\\"curl\\" default>\\n\\n```bash\\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"wget\\" label=\\"wget\\">\\n\\n```bash\\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\nYou can use either `curl` or `wget`\\n\\n:::caution\\nThe version keeps changing, so please check the latest version then. (Version 0.39.2 as of October 2022)\\n:::\\n\\n### Shell Configuration Settings\\n\\n:::tip\\nWhen you install nvm, follow the instructions that are printed on the console.\\n:::\\n\\n<Tabs>\\n  <TabItem value=\\"bash\\" label=\\"bash\\" default>\\n\\n```bash\\necho \'export NVM_DIR=\\"$HOME/.nvm\\"\' >> ~/.bashrc\\necho \'[ -s \\"/usr/local/opt/nvm/nvm.sh\\" ] && . \\"/usr/local/opt/nvm/nvm.sh\\"  # This loads nvm\' >> ~/.bashrc\\necho \'[ -s \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\" ] && . \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\"  # This loads nvm bash_completion\' >> ~/.bashrc\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"zsh\\" label=\\"zsh\\">\\n\\n```bash\\necho \'export NVM_DIR=\\"$HOME/.nvm\\"\' >> ~/.zshrc\\necho \'[ -s \\"/usr/local/opt/nvm/nvm.sh\\" ] && . \\"/usr/local/opt/nvm/nvm.sh\\"  # This loads nvm\' >> ~/.zshrc\\necho \'[ -s \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\" ] && . \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\"  # This loads nvm bash_completion\' >> ~/.zshrc\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n:::caution\\nAfter that, shut down the terminal completely (\u2318+Q) and run it again. Especially if the VSCode is running, you must shut down the VCode completely (\u2318+Q), restart the terminal, and then restart the VSCode.\\n:::\\n\\n### Confirm Installation\\n\\nType the following on the command line:\\n\\n```\\ncommand -v nvm\\n```\\n\\nThis output indicates that the installation is correct.\\n\\n```\\nnvm\\n```\\n\\n## .nvmrc Settings File\\n\\n:::tip\\nIt is a method of managing NodeJS versions used between multiple projects so that they do not get tangled.\\n:::\\n\\nWhat version of NodeJS execution environment should be used for each project?\'.You can save it to an nvmrc` file and put it in the code store for use.\\n\\n```text title=\\"lambda/.nvmrc\\"\\n16.18.0\\n```\\n\\n```text title=\\"webapp/.nvmrc\\"\\n17.9.1\\n```\\n\\n```text title=\\"server/.nvmrc\\"\\n18.12.0\\n```\\n\\nIf there are a lot of projects,\\n\\n\uac01 \uac1c\ubc1c\uc790\uac00 \ud504\ub85c\uc81d\ud2b8\ub97c clone \ud55c \ub2e4\uc74c \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc758 \ub8e8\ud2b8 \uacbd\ub85c(`.nvmrc` \ud30c\uc77c\uc774 \uc788\ub294 \uc704\uce58)\uc5d0\uc11c\\nEach developer should clone a project in the root path of that project (where the \'.nvmrc\' file is located)\\n\\n```\\n$ nvm install\\n$ nvm use\\n```\\n\\nThis will set the corresponding NodeJS execution environment.\\n\\n## Install the Latest NodeJSLTS Version\\n\\n```\\nnvm install --lts\\n```\\n\\nThe `--lts` option installs (or upgrades) the latest Long-Term Support (LTS) version\\n\\n:::note\\nI hope it was helpful. Thank you.\\n:::\\n\\n---\\n\\n## References\\n\\n- [Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions](https://github.com/nvm-sh/nvm)"},{"id":"install-nodejs-with-nvm","metadata":{"permalink":"/blog/install-nodejs-with-nvm","source":"@site/blog/2022-10-29-install-nodejs-with-nvm.mdx","title":"NVM\uc73c\ub85c NodeJS \uc124\uce58\ud558\uae30","description":"NVM\uc740 \uc5ec\ub7ec \ubc84\uc804\uc758 NodeJS\ub97c \uc124\uce58\ud574\ub450\uace0, \ud544\uc694\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ubc84\uc804\uc744 \ubc14\uafd4\uac00\uba74\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc8fc\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4.","date":"2022-10-29T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 29\uc77c","tags":[{"label":"nodejs","permalink":"/blog/tags/nodejs"}],"readingTime":5.155,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"install-nodejs-with-nvm","title":"NVM\uc73c\ub85c NodeJS \uc124\uce58\ud558\uae30","authors":"david","tags":["nodejs"]},"prevItem":{"title":"Installing NodeJS with NVM","permalink":"/blog/install-nodejs-with-nvm-eng"},"nextItem":{"title":"Using homebrew on Linux","permalink":"/blog/homebrew-eng"}},"content":"import Tabs from \'@theme/Tabs\'\\nimport TabItem from \'@theme/TabItem\'\\n\\nNVM\uc740 \uc5ec\ub7ec \ubc84\uc804\uc758 NodeJS\ub97c \uc124\uce58\ud574\ub450\uace0, \ud544\uc694\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ubc84\uc804\uc744 \ubc14\uafd4\uac00\uba74\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc8fc\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n## TypeScript\uc640 NodeJS\\n\\n\uae00\ub798\uc2a4\ub3d4\uc5d0\uc11c \ub9ce\uc774 \uc0ac\uc6a9\ud558\ub294 \ud504\ub85c\uadf8\ub798\ubc0d \uc5b8\uc5b4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.\\n\\n- SW\uac1c\ubc1c\ud300\\n  - Backend \uc11c\ubc84 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c: Go\\n  - Frontend \ud074\ub77c\uc774\uc5b8\ud2b8 \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uac1c\ubc1c: TypeScript\\n- Infra\ud300: Go, TypeScript\\n- AI/Data\ud300: Python\\n\\n\uadf8\uc911\uc5d0\uc11c Infra\ud300\uc740 \ud074\ub77c\uc6b0\ub4dc \uac1c\ubc1c\uacfc \uc778\ud504\ub77c \uad00\ub9ac\uc5d0 \uc2a4\ud06c\ub9bd\ud2b8 \uc5b8\uc5b4\uac00 \ud544\uc694\ud55c\ub370, TypeScript\ub97c \uc8fc\ub85c \uc0ac\uc6a9\ud558\uace0 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n**TypeScript\ub97c \uc2e4\ud589\ud558\uae30 \uc704\ud574\uc11c\ub294 NodeJS\uac00 \ud544\uc694**\ud558\uae30 \ub54c\ubb38\uc5d0 \uba3c\uc800 NodeJS\ub97c \uc124\uce58\ud574\uc57c \ud569\ub2c8\ub2e4.\\n\\n## NVM (Node Version Manager)\\n\\nNVM\uc740 \uc5ec\ub7ec \ubc84\uc804\uc758 NodeJS\ub97c \uc124\uce58\ud574\ub450\uace0, \ud544\uc694\uc5d0 \ub530\ub77c \uc5ec\ub7ec \ubc84\uc804\uc744 \ubc14\uafd4\uac00\uba74\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ub3c4\uc640\uc8fc\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4.\\n\\n:::tip\\n\ube44\uc2b7\ud558\uac8c [Go](https://go.dev/)\ub3c4 \uc5ec\ub7ec \ubc84\uc804\uc744 \uc124\uce58\ud558\uace0 \uad00\ub9ac\ud574\uc8fc\ub294 [GVM](https://github.com/moovweb/gvm)\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n:::\\n\\n\uc774\ub7f0 \uacbd\uc6b0\ub97c \uac00\uc815\ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.\\n\\n- AWS Lambda Function\uc5d0\ub294 Node 16 \uc0ac\uc6a9\\n- \ud504\ub860\ud2b8\uc5d4\ub4dc \uc6f9 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uac1c\ubc1c\ud560 \ub54c\ub294 Node 17 \uc0ac\uc6a9\\n- \uc11c\ubc84 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c\ub294 Node 18\uc744 \uc0ac\uc6a9\\n\\n\ud55c PC\uc5d0\uc11c\ub3c4 \uc5ec\ub7ec \ubc84\uc804\uc774 \uc124\uce58\ub418\uc5b4\uc57c \ud558\uace0, \ub610 \ub54c\ub54c\ub85c \ubc84\uc804 \uc5c5\uadf8\ub808\uc774\ub4dc\ub098 \ud328\uce58\ub3c4 \ud574\uc918\uc57c \ud558\uace0, \ubc14\uafd4\uac00\uba74\uc11c \uc0ac\uc6a9\ud574\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0 \ub2e8\uc21c\ud788 \ud55c \uac00\uc9c0 \ubc84\uc804\ub9cc \uc124\uce58\ud558\ub294 \ubc29\ubc95\ub9cc\uc73c\ub85c\ub294 \ub9e4\uc6b0 \ubd88\ud3b8\ud560 \uac83\uc785\ub2c8\ub2e4.\\n\\n:::caution\\n\uadf8\ub798\uc11c NodeJS \ud648\ud398\uc774\uc9c0\uc5d0 \ub4e4\uc5b4\uac00\uc11c \ub2e4\uc6b4\ub85c\ub4dc \ubc1b\uc544\uc11c \uc124\uce58\ud558\ub294 \ubc29\ubc95\uc740 \ucd94\ucc9c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\\n:::\\n\\n\uc774\ub7f4 \ub584 NVM\uc744 \uc0ac\uc6a9\ud574\uc11c NodeJS\ub97c \uc124\uce58\ud558\uace0 \ubc84\uc804\uc744 \uad00\ub9ac\ud558\uba74 \ud3b8\ub9ac\ud569\ub2c8\ub2e4.\\n\\n## \uc124\uce58 \ubc29\ubc95\\n\\n:::info\\n[Install & Update Script](https://github.com/nvm-sh/nvm#install--update-script)\\n:::\\n\\n<Tabs>\\n  <TabItem value=\\"curl\\" label=\\"curl\\" default>\\n\\n```bash\\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"wget\\" label=\\"wget\\">\\n\\n```bash\\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n`curl`, `wget` \ub458 \uc911 \uc544\ubb34 \uac70\ub098 \ud558\uba74 \ub429\ub2c8\ub2e4.\\n\\n:::caution\\n\ubc84\uc804\uc740 \uacc4\uc18d \ubc14\ub00c\ub2c8\uae4c \uadf8\ub54c\uadf8\ub54c \ucd5c\uc2e0 \ubc84\uc804\uc744 \ud655\uc778\ud574\uc8fc\uc138\uc694. (2022\ub144 10\uc6d4 \ud604\uc7ac \ubc84\uc804 0.39.2)\\n:::\\n\\n### \uc258 \ud658\uacbd \uc124\uc815\\n\\n:::tip\\nnvm\uc744 \uc124\uce58\ud560 \ub54c \ucf58\uc194\uc5d0 \ucd9c\ub825\ub418\ub294 \ubc29\ubc95\ub300\ub85c \ub530\ub77c\ud558\uba74 \ub429\ub2c8\ub2e4.\\n:::\\n\\n<Tabs>\\n  <TabItem value=\\"bash\\" label=\\"bash\\" default>\\n\\n```bash\\necho \'export NVM_DIR=\\"$HOME/.nvm\\"\' >> ~/.bashrc\\necho \'[ -s \\"/usr/local/opt/nvm/nvm.sh\\" ] && . \\"/usr/local/opt/nvm/nvm.sh\\"  # This loads nvm\' >> ~/.bashrc\\necho \'[ -s \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\" ] && . \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\"  # This loads nvm bash_completion\' >> ~/.bashrc\\n```\\n\\n  </TabItem>\\n  <TabItem value=\\"zsh\\" label=\\"zsh\\">\\n\\n```bash\\necho \'export NVM_DIR=\\"$HOME/.nvm\\"\' >> ~/.zshrc\\necho \'[ -s \\"/usr/local/opt/nvm/nvm.sh\\" ] && . \\"/usr/local/opt/nvm/nvm.sh\\"  # This loads nvm\' >> ~/.zshrc\\necho \'[ -s \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\" ] && . \\"/usr/local/opt/nvm/etc/bash_completion.d/nvm\\"  # This loads nvm bash_completion\' >> ~/.zshrc\\n```\\n\\n  </TabItem>\\n</Tabs>\\n\\n:::caution\\n\ud558\uace0 \ub098\uba74 \ud130\ubbf8\ub110\uc744 \uc644\uc804\ud788 \uc885\ub8cc(\u2318+Q)\ud558\uace0 \ub2e4\uc2dc \uc2e4\ud589\ud574\uc8fc\uc138\uc694. \ud2b9\ud788 VSCode\uac00 \uc2e4\ud589\uc911\uc774\ub77c\uba74, VScode\ub97c \uc644\uc804\ud788 \uc885\ub8cc\ud558\uace0(\u2318+Q) \ud130\ubbf8\ub110\uc744 \uc7ac\uc2dc\uc791\ud55c \ud6c4\uc5d0 VSCode\ub97c \uc7ac\uc2dc\uc791\ud574\uc8fc\uc5b4\uc57c \ud569\ub2c8\ub2e4.\\n:::\\n\\n### \uc124\uce58 \ud655\uc778\\n\\n\uba85\ub839\uc904\uc5d0 \uc544\ub798\uc640 \uac19\uc774 \uc785\ub825\ud569\ub2c8\ub2e4.\\n\\n```\\ncommand -v nvm\\n```\\n\\n\uc774\ub807\uac8c \ucd9c\ub825\ub418\uba74 \uc124\uce58\uac00 \uc62c\ubc14\ub974\uac8c \ub41c \uac83\uc785\ub2c8\ub2e4.\\n\\n```\\nnvm\\n```\\n\\n## .nvmrc \uc124\uc815 \ud30c\uc77c\\n\\n:::tip\\n\uc5ec\ub7ec \ud504\ub85c\uc81d\ud2b8 \uac04\uc5d0 \uc0ac\uc6a9\ud558\ub294 NodeJS \ubc84\uc804\uc774 \uc5c9\ud0a4\uc9c0 \uc54a\ub3c4\ub85d \uad00\ub9ac\ud574\uc8fc\ub294 \ubc29\ubc95\uc785\ub2c8\ub2e4.\\n:::\\n\\n\uac01 \ud504\ub85c\uc81d\ud2b8 \ub9c8\ub2e4 \uc5b4\ub5a4 \ubc84\uc804\uc758 NodeJS \uc2e4\ud589 \ud658\uacbd\uc744 \uc0ac\uc6a9\ud574\uc57c \ud558\ub294\uc9c0\ub97c `.nvmrc` \ud30c\uc77c\uc5d0 \uc800\uc7a5\ud574\ub193\uace0 \ucf54\ub4dc \uc800\uc7a5\uc18c\uc5d0 \uc62c\ub824\ub193\uace0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n```text title=\\"lambda/.nvmrc\\"\\n16.18.0\\n```\\n\\n```text title=\\"webapp/.nvmrc\\"\\n17.9.1\\n```\\n\\n```text title=\\"server/.nvmrc\\"\\n18.12.0\\n```\\n\\n\uc774\ub807\uac8c \uc5ec\ub7ec \ud504\ub85c\uc81d\ud2b8\uac00 \uc788\ub2e4\uba74,\\n\\n\uac01 \uac1c\ubc1c\uc790\uac00 \ud504\ub85c\uc81d\ud2b8\ub97c clone \ud55c \ub2e4\uc74c \ud574\ub2f9 \ud504\ub85c\uc81d\ud2b8\uc758 \ub8e8\ud2b8 \uacbd\ub85c(`.nvmrc` \ud30c\uc77c\uc774 \uc788\ub294 \uc704\uce58)\uc5d0\uc11c\\n\\n```\\n$ nvm install\\n$ nvm use\\n```\\n\\n\ud574\uc8fc\uba74 \ud574\ub2f9 NodeJS \uc2e4\ud589 \ud658\uacbd\uc73c\ub85c \uc124\uc815\ub429\ub2c8\ub2e4.\\n\\n## \ucd5c\uc2e0 NodeJS LTS \ubc84\uc804 \uc124\uce58\ud558\uae30\\n\\n```\\nnvm install --lts\\n```\\n\\n`--lts` \uc635\uc158\uc744 \ubd99\uc774\uba74 \ucd5c\uc2e0 LTS(Long-Term Support) \ubc84\uc804\uc744 \uc124\uce58(\ud639\uc740 \uc5c5\uadf8\ub808\uc774\ub4dc) \ud569\ub2c8\ub2e4.\\n\\n:::note\\n\ub3c4\uc6c0\uc774 \ub418\uc168\uae38 \ubc14\ub78d\ub2c8\ub2e4. \uac10\uc0ac\ud569\ub2c8\ub2e4.\\n:::\\n\\n---\\n\\n## References\\n\\n- [Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions](https://github.com/nvm-sh/nvm)"},{"id":"homebrew-eng","metadata":{"permalink":"/blog/homebrew-eng","source":"@site/blog/2022-10-28-homebrew-eng.md","title":"Using homebrew on Linux","description":"The package manager for MacOS is homebrew","date":"2022-10-28T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 28\uc77c","tags":[{"label":"homebrew","permalink":"/blog/tags/homebrew"}],"readingTime":0.66,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"homebrew-eng","title":"Using homebrew on Linux","authors":"mike","tags":["homebrew"]},"prevItem":{"title":"NVM\uc73c\ub85c NodeJS \uc124\uce58\ud558\uae30","permalink":"/blog/install-nodejs-with-nvm"},"nextItem":{"title":"\ub9ac\ub205\uc2a4\uc5d0\uc11c\ub3c4 homebrew \uc0ac\uc6a9\ud558\uae30","permalink":"/blog/homebrew"}},"content":"The package manager for MacOS is [homebrew](https://brew.sh/)\\n\\nThis makes it easy to install the packages you need with simple commands.\\n\\nBut did you know that homebrew can also be used on Linux?\\n\\n\x3c!--truncate--\x3e\\n\\nWith homebrew, Windows(WSL), Linux, and macOS can unify the package installation methods required for development.\\n\\n:::caution\\n\\nSome packages may only be available in macOS, depending on the circumstances.\\n\\n:::\\n\\n## How to Install\\n\\nInstallation can be done simply like this.\\n\\n```bash\\n$ /bin/bash -c \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\"\\n```\\n\\n## How to Use\\n\\nShall we try installing [go](https://formulae.brew.sh/formula/go)) as an example?\\n\\n```bash\\n$ brew install go\\n```\\n\\nThis will install Go.\\n\\n```bash\\n$ go --version\\ngo version go1.19 darwin/amd64\\n```\\n\\nI hope it was helpful.\\n\\nThank you.\\n\\n---\\n\\n## References\\n\\n- [Homebrew: The Missing Package Manager for macOS (or Linux)](https://brew.sh/)"},{"id":"homebrew","metadata":{"permalink":"/blog/homebrew","source":"@site/blog/2022-10-28-homebrew.md","title":"\ub9ac\ub205\uc2a4\uc5d0\uc11c\ub3c4 homebrew \uc0ac\uc6a9\ud558\uae30","description":"homebrew\ub294 macOS\uc758 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\uc785\ub2c8\ub2e4.","date":"2022-10-28T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 28\uc77c","tags":[{"label":"homebrew","permalink":"/blog/tags/homebrew"}],"readingTime":1.16,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"homebrew","title":"\ub9ac\ub205\uc2a4\uc5d0\uc11c\ub3c4 homebrew \uc0ac\uc6a9\ud558\uae30","authors":"david","tags":["homebrew"]},"prevItem":{"title":"Using homebrew on Linux","permalink":"/blog/homebrew-eng"},"nextItem":{"title":"Windows on Linux: WSL2","permalink":"/blog/wsl2-eng"}},"content":"[homebrew](https://brew.sh/)\ub294 macOS\uc758 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\uc785\ub2c8\ub2e4.\\n\\n\ub355\ubd84\uc5d0 \ud544\uc694\ud55c \ud328\ud0a4\uc9c0\ub97c \uac04\ub2e8\ud55c \uba85\ub839\uc5b4\ub85c \uc27d\uac8c \uc124\uce58\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n\uadf8\ub7f0\ub370 \uadf8 homebrew\ub97c \ub9ac\ub205\uc2a4\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83, \uc54c\uace0 \uacc4\uc168\ub098\uc694?\\n\\n\x3c!--truncate--\x3e\\n\\nhomebrew\ub97c \uc0ac\uc6a9\ud568\uc73c\ub85c\uc368 Windows(WSL), Linux \uadf8\ub9ac\uace0 macOS\uc5d0\uc11c \uac1c\ubc1c\uc5d0 \ud544\uc694 \ud328\ud0a4\uc9c0 \uc124\uce58 \ubc29\ubc95\uc744 \ud558\ub098\ub85c \ud1b5\uc77c\ud560 \uc218 \uc788\uac8c \ub429\ub2c8\ub2e4.\\n\\n:::caution\\n\\n\uc77c\ubd80 \ud328\ud0a4\uc9c0\ub294 \uc0ac\uc815\uc5d0 \ub530\ub77c\uc11c macOS\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uacbd\uc6b0\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n:::\\n\\n## \uc124\uce58 \ubc29\ubc95\\n\\n\uc124\uce58\ub294 \uac04\ub2e8\ud558\uac8c \uc774\ub807\uac8c \ud558\uba74 \ub429\ub2c8\ub2e4.\\n\\n```bash\\n$ /bin/bash -c \\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\"\\n```\\n\\n## \uc0ac\uc6a9 \ubc29\ubc95\\n\\n\uc608\uc2dc\ub85c [go](https://formulae.brew.sh/formula/go)\ub97c \uc124\uce58\ud574\ubcfc\uae4c\uc694?\\n\\n```bash\\n$ brew install go\\n```\\n\\n\uadf8\ub7ec\uba74 Go\uac00 \uc124\uce58\ub429\ub2c8\ub2e4.\\n\\n```bash\\n$ go --version\\ngo version go1.19 darwin/amd64\\n```\\n\\n\ub3c4\uc6c0\uc774 \ub418\uc168\uae38 \ubc14\ub78d\ub2c8\ub2e4.\\n\\n\uac10\uc0ac\ud569\ub2c8\ub2e4.\\n\\n---\\n\\n## References\\n\\n- [Homebrew: The Missing Package Manager for macOS (or Linux)](https://brew.sh/)"},{"id":"wsl2-eng","metadata":{"permalink":"/blog/wsl2-eng","source":"@site/blog/2022-10-27-wsl2-eng.md","title":"Windows on Linux: WSL2","description":"WSL2: Windows Subsystem for Linux 2","date":"2022-10-27T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 27\uc77c","tags":[{"label":"wsl2","permalink":"/blog/tags/wsl-2"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":1.465,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"wsl2-eng","title":"Windows on Linux: WSL2","authors":"mike","tags":["wsl2","linux"]},"prevItem":{"title":"\ub9ac\ub205\uc2a4\uc5d0\uc11c\ub3c4 homebrew \uc0ac\uc6a9\ud558\uae30","permalink":"/blog/homebrew"},"nextItem":{"title":"Windows\uc5d0\uc11c\ub3c4 Linux\ub97c: WSL2","permalink":"/blog/wsl2"}},"content":"## WSL2: Windows Subsystem for Linux 2\\n\\nWSL stands for \\"Windows Subsystem for Linux\\", a tool that makes Linux available to Windows.\\n\\n\x3c!--truncate--\x3e\\n\\nBefore WSL came out, we used [Cygwin] (https://www.cygwin.com/)) or a method of installing a Linux distribution (such as Ubuntu) as a VM on a PC. Cygwin is not a complete Linux implementation, however, and installing Linux as a VM is costly. Instead, WSL makes it convenient for Windows to use Linux.\\n\\n## Advantages of WSL\\n\\nWSL2 allows Windows PC users to have the same user experience as they do with the Darwin operating system. Installing and using WSL has the following advantages:\\n\\n- You can easily install the tools you need by using a package manager such as [homebrew](https://brew.sh/).\\n- In many cases, you can quickly solve any problems using linux shell commands\\n\\nAbove all, when documenting any troubleshooting method, **Windows users and macOS users do not have to write separate solutions** which optimizes the team\'s communication and development productivity.\\n\\n## Disadvantages of WSL\\n\\nWSL is different from the actual Linux distribution and cannot be used for servers. (systemd not supported)\\n\\nInstead, there is virtually **no downside for us to use PCs**.\\n\\n## How to install\\n\\nOpen PowerShell with administrator privileges\\n\\n```\\nwsl --install\\n```\\n\\nThis will install (based on Windows 11)\\n\\n- [[English] Install Linux on Windows with WSL](https://learn.microsoft.com/en-us/windows/wsl/install)\\n- [[\ud55c\uad6d\uc5b4] WSL\uc744 \uc0ac\uc6a9\ud558\uc5ec Windows\uc5d0 Linux \uc124\uce58](https://learn.microsoft.com/ko-kr/windows/wsl/install)\\n\\n## More: Windows Terminal\\n\\nIt is better to run the shell using Windows Terminal provided by Windows than to run the WSL distribution directly (for example, Ubuntu).\\n\\nUse shortcuts, such as copy-paste, which are more compatible with other programs, and the interface is convenient.\\n\\n:::info\\n[[Microsoft Apps] Windows Terminal](https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701)\\n:::\\n\\nThanks for reading!"},{"id":"wsl2","metadata":{"permalink":"/blog/wsl2","source":"@site/blog/2022-10-27-wsl2.md","title":"Windows\uc5d0\uc11c\ub3c4 Linux\ub97c: WSL2","description":"WSL2: Windows Subsystem for Linux 2","date":"2022-10-27T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 27\uc77c","tags":[{"label":"wsl2","permalink":"/blog/tags/wsl-2"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":2.85,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"wsl2","title":"Windows\uc5d0\uc11c\ub3c4 Linux\ub97c: WSL2","authors":"david","tags":["wsl2","linux"]},"prevItem":{"title":"Windows on Linux: WSL2","permalink":"/blog/wsl2-eng"},"nextItem":{"title":"Opening of Glassdome\'s Technical Blog!","permalink":"/blog/getting-started-eng"}},"content":"## WSL2: Windows Subsystem for Linux 2\\n\\nWSL\uc740 \\"Windows Subsystem for Linux\\"\uc758 \uc57d\uc790\ub85c, Windows\uc5d0\uc11c Linux\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uac8c \ud558\ub294 \ub3c4\uad6c\uc785\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\nWSL\uc774 \ub098\uc624\uae30 \uc804\uc5d0\ub294 [Cygwin](https://www.cygwin.com/)\uc774\ub098, VM\uc73c\ub85c \ub9ac\ub205\uc2a4 \ubc30\ud3ec\ud310(Ubuntu \ub4f1)\uc744 PC\uc5d0 \uc124\uce58\ud558\ub294 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. \ud558\uc9c0\ub9cc Cygwin\uc73c\ub85c\ub294 \uc628\uc804\ud55c \ub9ac\ub205\uc2a4 \uad6c\ud604\uc774 \uc548 \ub418\uace0, VM\uc73c\ub85c \ub9ac\ub205\uc2a4\ub97c \uc124\uce58\ud558\ub294 \ubc29\ubc95\uc740 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4e4\uc5b4\uac11\ub2c8\ub2e4. \ub300\uc2e0 WSL\uc744 \uc0ac\uc6a9\ud558\uba74 Windows\uc5d0\uc11c \ud3b8\ub9ac\ud558\uac8c Linux\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n## WSL\uc758 \uc7a5\uc810\\n\\nWSL2\uc740 Windows PC \uc0ac\uc6a9\uc790\uac00, \ub9e5(darwin \uc6b4\uc601\uccb4\uc81c)\uc5d0\uc11c\uc640 \uac19\uc740 \uc0ac\uc6a9\uc790 \uacbd\ud5d8\uc744 \uac16\uac8c \ud574\uc90d\ub2c8\ub2e4. WSL\uc744 \uc124\uce58\ud574\uc11c \uc0ac\uc6a9\ud558\uba74 \ub2e4\uc74c\uacfc \uac19\uc740 \uc7a5\uc810\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\n\\n- [homebrew](https://brew.sh/) \uac19\uc740 \ud328\ud0a4\uc9c0 \uad00\ub9ac\uc790\ub97c \uc0ac\uc6a9\ud574\uc11c \ud544\uc694\ud55c \ub3c4\uad6c\ub97c \uc190\uc27d\uac8c \uc124\uce58\ud560 \uc218 \uc788\ub2e4.\\n- \ub9ce\uc740 \uacbd\uc6b0 \ubb38\uc81c\uc758 \ud574\uacb0 \ubc29\ubc95\uc774 \ub418\ub294 unix \uc258 \uba85\ub839\uc5b4\ub97c \ubc14\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.\\n\\n\ubb34\uc5c7\ubcf4\ub2e4\ub3c4 \uc5b4\ub5a4 \ubb38\uc81c \ud574\uacb0 \ubc29\ubc95\uc744 \uacf5\uc720\ud560 \ub54c, **Windows \uc0ac\uc6a9\uc790 \ub530\ub85c macOS \uc0ac\uc6a9\uc790 \ub530\ub85c \uac01\uac01 \ubc29\ubc95\uc744 \uae30\uc220\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub418\ubbc0\ub85c** \ud300\uc758 \uc815\ubcf4 \uacf5\uc720 \ud6a8\uc728\uacfc \uac1c\ubc1c \uc0dd\uc0b0\uc131\uc774 \uc62c\ub77c\uac11\ub2c8\ub2e4.\\n\\n## WSL\uc758 \ub2e8\uc810\\n\\nWSL\uc740 \uc2e4\uc81c \ub9ac\ub205\uc2a4 \ubc30\ud3ec\ud310\uacfc \ub2ec\ub77c\uc11c \uc11c\ubc84\uc6a9\uc73c\ub85c\ub294 \uc4f8 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. (\ud2b9\ud788 systemd \uc9c0\uc6d0 \uc548 \ub428)\\n\\n\ub300\uc2e0 \uc6b0\ub9ac\uac00 PC\uc6a9\uc73c\ub85c \uc4f0\uae30\uc5d0\ub294 **\uc0ac\uc2e4\uc0c1 \ub2e8\uc810\uc774 \uc5c6\uc2b5\ub2c8\ub2e4**.\\n\\n## \uc124\uce58 \ubc29\ubc95\\n\\nPowerShell\uc744 \uad00\ub9ac\uc790 \uad8c\ud55c\uc73c\ub85c \uc5f4\uace0,\\n\\n```\\nwsl --install\\n```\\n\\n\ud558\uba74 \uc124\uce58\ub429\ub2c8\ub2e4. (Windows 11 \uae30\uc900)\\n\\n- [[English] Install Linux on Windows with WSL](https://learn.microsoft.com/en-us/windows/wsl/install)\\n- [[\ud55c\uad6d\uc5b4] WSL\uc744 \uc0ac\uc6a9\ud558\uc5ec Windows\uc5d0 Linux \uc124\uce58](https://learn.microsoft.com/ko-kr/windows/wsl/install)\\n\\n## \ucd94\uac00: Windows Terminal\\n\\nWSL \ubc30\ud3ec\ud310(\uc608\ub97c \ub4e4\uba74, Ubuntu \ub4f1)\uc744 \uc9c1\uc811 \uc2e4\ud589\ud558\ub294 \uac83 \ubcf4\ub2e4\ub294 \uc708\ub3c4\uc6b0\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 Windows Terminal\uc744 \uc0ac\uc6a9\ud574\uc11c \uc258\uc744 \uc2e4\ud589\ud558\uba74 \ub354 \uc88b\uc2b5\ub2c8\ub2e4.\\n\\n\ubcf5\uc0ac-\ubd99\uc5ec\ub123\uae30 \ub4f1 \ub2e8\ucd95\ud0a4 \uc0ac\uc6a9 \ubc0f \ub2e4\ub978 \ud504\ub85c\uadf8\ub7a8\uacfc\uc758 \ud638\ud658\uc131\uc774 \ub354 \uc88b\uace0 \uc778\ud130\ud398\uc774\uc2a4\uac00 \ud3b8\ub9ac\ud569\ub2c8\ub2e4.\\n\\n:::info\\n[[Microsoft Apps] Windows Terminal](https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701)\\n:::\\n\\n\uac10\uc0ac\ud569\ub2c8\ub2e4.\\n\\n:::tip\\n\uc774 \ubb38\uc11c\ub294 \uc601\uc5b4\ub85c \ubc88\uc5ed\ub41c \ubc84\uc804\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\nThere is a English version of this document.\\n[\ubc14\ub85c\uac00\uae30](/blog/wsl2-eng)\\n:::"},{"id":"getting-started-eng","metadata":{"permalink":"/blog/getting-started-eng","source":"@site/blog/2022-10-24-getting-started-eng.md","title":"Opening of Glassdome\'s Technical Blog!","description":"I have created a technical blog for Glassdome Korea","date":"2022-10-24T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 24\uc77c","tags":[{"label":"\ube14\ub85c\uadf8","permalink":"/blog/tags/\ube14\ub85c\uadf8"},{"label":"blog","permalink":"/blog/tags/blog"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.345,"hasTruncateMarker":true,"authors":[{"name":"Mike","title":"Software Engineer Intern","url":"https://github.com/dcl3","imageURL":"https://avatars.githubusercontent.com/u/56098714?v=4","key":"mike"}],"frontMatter":{"slug":"getting-started-eng","title":"Opening of Glassdome\'s Technical Blog!","authors":"mike","tags":["\ube14\ub85c\uadf8","blog","docusaurus"]},"prevItem":{"title":"Windows\uc5d0\uc11c\ub3c4 Linux\ub97c: WSL2","permalink":"/blog/wsl2"},"nextItem":{"title":"\uae00\ub798\uc2a4\ub3d4\ucf54\ub9ac\uc544 \uae30\uc220\ube14\ub85c\uadf8 \uc624\ud508!","permalink":"/blog/getting-started"}},"content":"I have created a technical blog for Glassdome Korea\\n\\nFrom now on I will upload interesting articles to this blog\\n\\nWe ask for your interest and participation in the future\\n\\nThank you!\\n\\n\x3c!--truncate--\x3e\\n\\n## References\\n\\n- [TechBlogPosts](https://techblogposts.com/)\\n- [\uac1c\ubc1c \uc2e4\ub825\uc744 \uc704\ud55c IT\uae30\uc5c5 \uae30\uc220 \ube14\ub85c\uadf8 45\uacf3 \ubaa8\uc74c](https://brunch.co.kr/@sicle-official/35)\\n- [\uae30\uc220\ube14\ub85c\uadf8 \ubaa8\uc74c](https://github.com/seonggwonyoon/techblog)"},{"id":"getting-started","metadata":{"permalink":"/blog/getting-started","source":"@site/blog/2022-10-24-getting-started.md","title":"\uae00\ub798\uc2a4\ub3d4\ucf54\ub9ac\uc544 \uae30\uc220\ube14\ub85c\uadf8 \uc624\ud508!","description":"\uae00\ub798\uc2a4\ub3d4\ucf54\ub9ac\uc544 \uae30\uc220\ube14\ub85c\uadf8\ub97c \uac1c\uc124\ud558\uc600\uc2b5\ub2c8\ub2e4.","date":"2022-10-24T00:00:00.000Z","formattedDate":"2022\ub144 10\uc6d4 24\uc77c","tags":[{"label":"\ube14\ub85c\uadf8","permalink":"/blog/tags/\ube14\ub85c\uadf8"},{"label":"blog","permalink":"/blog/tags/blog"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.645,"hasTruncateMarker":true,"authors":[{"name":"\uc774\ud604\uc218","title":"Senior Engineer","url":"https://github.com/civilizeddev","imageURL":"https://github.com/civilizeddev.png","key":"david"}],"frontMatter":{"slug":"getting-started","title":"\uae00\ub798\uc2a4\ub3d4\ucf54\ub9ac\uc544 \uae30\uc220\ube14\ub85c\uadf8 \uc624\ud508!","authors":"david","tags":["\ube14\ub85c\uadf8","blog","docusaurus"]},"prevItem":{"title":"Opening of Glassdome\'s Technical Blog!","permalink":"/blog/getting-started-eng"}},"content":"\uae00\ub798\uc2a4\ub3d4\ucf54\ub9ac\uc544 \uae30\uc220\ube14\ub85c\uadf8\ub97c \uac1c\uc124\ud558\uc600\uc2b5\ub2c8\ub2e4.\\n\\n\uc55e\uc73c\ub85c \uc7ac\ubbf8\uc788\ub294 \uae30\uc220 \uc774\uc57c\uae30\ub4e4\uc744 \uc62c\ub9b4 \uc608\uc815\uc785\ub2c8\ub2e4.\\n\\n\ub9ce\uc740 \uad00\uc2ec\uacfc \ucc38\uc5ec \ubd80\ud0c1\ub4dc\ub9bd\ub2c8\ub2e4.\\n\\n\uac10\uc0ac\ud569\ub2c8\ub2e4.\\n\\n\x3c!--truncate--\x3e\\n\\n:::tip\\n\uc774 \ubb38\uc11c\ub294 \uc601\uc5b4\ub85c \ubc88\uc5ed\ub41c \ubc84\uc804\uc774 \uc788\uc2b5\ub2c8\ub2e4.\\nThere is a English version of this document.\\n[\ubc14\ub85c\uac00\uae30](/blog/getting-started-eng)\\n:::\\n\\n## References\\n\\n- [TechBlogPosts](https://techblogposts.com/)\\n- [\uac1c\ubc1c \uc2e4\ub825\uc744 \uc704\ud55c IT\uae30\uc5c5 \uae30\uc220 \ube14\ub85c\uadf8 45\uacf3 \ubaa8\uc74c](https://brunch.co.kr/@sicle-official/35)\\n- [\uae30\uc220\ube14\ub85c\uadf8 \ubaa8\uc74c](https://github.com/seonggwonyoon/techblog)"}]}')}}]);