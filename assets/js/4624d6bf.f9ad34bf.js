"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[424],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(a),f=n,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return a?r.createElement(m,s(s({ref:t},p),{},{components:a})):r.createElement(m,s({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},7254:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=a(7462),n=(a(7294),a(4137));const o={slug:"persistent-storage-increase",title:"How to increase persistent storage capacity for a stateful set on K8s with no downtime",authors:"adil",tags:["kubernetes","statefulset","storage","persistent","volume","capacity","increase","downtime"]},s=void 0,i={permalink:"/blog/persistent-storage-increase",source:"@site/blog/2022-12-1-persistent-volume-increase.md",title:"How to increase persistent storage capacity for a stateful set on K8s with no downtime",description:"Why do we need this?",date:"2022-12-01T00:00:00.000Z",formattedDate:"2022\ub144 12\uc6d4 1\uc77c",tags:[{label:"kubernetes",permalink:"/blog/tags/kubernetes"},{label:"statefulset",permalink:"/blog/tags/statefulset"},{label:"storage",permalink:"/blog/tags/storage"},{label:"persistent",permalink:"/blog/tags/persistent"},{label:"volume",permalink:"/blog/tags/volume"},{label:"capacity",permalink:"/blog/tags/capacity"},{label:"increase",permalink:"/blog/tags/increase"},{label:"downtime",permalink:"/blog/tags/downtime"}],readingTime:1.795,hasTruncateMarker:!0,authors:[{name:"Adil",title:"Software Engineer",url:"https://github.com/adilb99",imageURL:"https://avatars.githubusercontent.com/u/47117931?v=4",key:"adil"}],frontMatter:{slug:"persistent-storage-increase",title:"How to increase persistent storage capacity for a stateful set on K8s with no downtime",authors:"adil",tags:["kubernetes","statefulset","storage","persistent","volume","capacity","increase","downtime"]},nextItem:{title:"Creating an API Gateway for your backend with KrakenD",permalink:"/blog/krakend"}},l={authorsImageUrls:[void 0]},c=[{value:"Why do we need this?",id:"why-do-we-need-this",level:2}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"why-do-we-need-this"},"Why do we need this?"),(0,n.kt)("p",null,"Certain applications that run on Kubernetes are deployed via deployments and some via stateful sets. Database systems like Clickhouse are usually deployed via stateful sets. "),(0,n.kt)("p",null,"However, storage disks for such databases can easily run out of space and become full and if we try to increase the capacity in-place for the running stateful set, we can run into an error:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"StatefulSet.apps <appName> is invalid: spec: Forbidden: updates to statefulset > spec for fields other than 'replicas', 'template', and 'updateStrategy' are forbidden.\n")),(0,n.kt)("p",null,"The first solution to this that comes to mind is to simply re-create the stateful set. For that, however, we need to stop and remove the stateful set and all its pods, transfer the data from the volume to a backup storage, re-create everything and move the data. This can create a good amount of downtime many applications cannot afford."),(0,n.kt)("p",null,"Fortunately, there is an easy workaround that allows no downtime."))}u.isMDXComponent=!0}}]);